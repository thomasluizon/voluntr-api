// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Voluntr.Infrastructure.Contexts;

#nullable disable

namespace Voluntr.Infrastructure.Migrations
{
    [DbContext(typeof(SqlContext))]
    [Migration("20241219200522_AchievementsAndSeed")]
    partial class AchievementsAndSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Voluntr.Domain.Models.Achievement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TaskCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Achievement");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e5d0214c-53f0-4f18-8d51-2f590048413a"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 976, DateTimeKind.Unspecified).AddTicks(2003),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/arregacando-as-mangas.png",
                            Name = "Arregaçando as Mangas",
                            TaskCount = 5
                        },
                        new
                        {
                            Id = new Guid("b90e443d-9881-477a-a365-24b1096a426e"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 976, DateTimeKind.Unspecified).AddTicks(2552),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/fazedor-de-impacto.png",
                            Name = "Fazedor de Impacto",
                            TaskCount = 10
                        },
                        new
                        {
                            Id = new Guid("3cc31b59-9765-4825-a3b4-a4de0e0b174b"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 976, DateTimeKind.Unspecified).AddTicks(2563),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/agente-da-mudanca.png",
                            Name = "Agente de Mudança",
                            TaskCount = 20
                        },
                        new
                        {
                            Id = new Guid("a3f3899a-43a4-4f83-a122-59df0a549087"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 976, DateTimeKind.Unspecified).AddTicks(2663),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/heroi-da-comunidade.png",
                            Name = "Heroi da Comunidade",
                            TaskCount = 50
                        },
                        new
                        {
                            Id = new Guid("d8982807-da0f-4bf8-83a5-f40d23ad5295"),
                            CategoryId = new Guid("8c31424d-742d-4239-b49c-199303875ab4"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 976, DateTimeKind.Unspecified).AddTicks(5219),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/meio-ambiente/eco-guardiao.png",
                            Name = "Eco-Guardião",
                            TaskCount = 5
                        },
                        new
                        {
                            Id = new Guid("1b1ccb0c-5e67-4c57-bf0b-6ccb48da9985"),
                            CategoryId = new Guid("8c31424d-742d-4239-b49c-199303875ab4"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 978, DateTimeKind.Unspecified).AddTicks(884),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/meio-ambiente/protetor-da-terra.png",
                            Name = "Protetor da Terra",
                            TaskCount = 10
                        },
                        new
                        {
                            Id = new Guid("fd7e941e-2a51-42ef-8b59-0af53d541848"),
                            CategoryId = new Guid("8c31424d-742d-4239-b49c-199303875ab4"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 978, DateTimeKind.Unspecified).AddTicks(987),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/meio-ambiente/herói-verde.png",
                            Name = "Herói Verde",
                            TaskCount = 20
                        },
                        new
                        {
                            Id = new Guid("0c9d51c0-1e83-4a65-ad91-725852266144"),
                            CategoryId = new Guid("8c31424d-742d-4239-b49c-199303875ab4"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 978, DateTimeKind.Unspecified).AddTicks(1043),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/meio-ambiente/guardiao-ambiental.png",
                            Name = "Guardião Ambiental",
                            TaskCount = 50
                        },
                        new
                        {
                            Id = new Guid("464e0a82-b5c2-44f1-bd44-39a67a808a3c"),
                            CategoryId = new Guid("5d7f3b5a-403a-4ae5-811b-3fd9a07150d5"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 978, DateTimeKind.Unspecified).AddTicks(1064),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/educacao/tutor-comunitário.png",
                            Name = "Tutor Comunitário",
                            TaskCount = 5
                        },
                        new
                        {
                            Id = new Guid("4c6d19f7-d2fc-471d-8c1a-7b505a271b22"),
                            CategoryId = new Guid("5d7f3b5a-403a-4ae5-811b-3fd9a07150d5"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 978, DateTimeKind.Unspecified).AddTicks(1077),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/educacao/protetor-do-conhecimento.png",
                            Name = "Protetor do Conhecimento",
                            TaskCount = 10
                        },
                        new
                        {
                            Id = new Guid("64ee0c35-d9f3-471f-8f00-759d24a899de"),
                            CategoryId = new Guid("5d7f3b5a-403a-4ae5-811b-3fd9a07150d5"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 978, DateTimeKind.Unspecified).AddTicks(1126),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/educacao/herói-do-futuro.png",
                            Name = "Herói do Futuro",
                            TaskCount = 20
                        },
                        new
                        {
                            Id = new Guid("2748ff31-5d7c-4805-afe7-5e12c5610487"),
                            CategoryId = new Guid("5d7f3b5a-403a-4ae5-811b-3fd9a07150d5"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 978, DateTimeKind.Unspecified).AddTicks(1135),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/educacao/guardiao-da-transformacao.png",
                            Name = "Guardião da Transformação",
                            TaskCount = 50
                        },
                        new
                        {
                            Id = new Guid("23649e05-6470-46f1-abf3-a972e5beb695"),
                            CategoryId = new Guid("39488396-6021-490c-ab77-5c2a0b7faf01"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 978, DateTimeKind.Unspecified).AddTicks(1147),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/protecao-dos-animais/anjo-dos-animais.png",
                            Name = "Anjo dos Animais",
                            TaskCount = 5
                        },
                        new
                        {
                            Id = new Guid("16b6c183-8ef1-4c00-ace9-920b6bf983c2"),
                            CategoryId = new Guid("39488396-6021-490c-ab77-5c2a0b7faf01"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 978, DateTimeKind.Unspecified).AddTicks(1154),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/protecao-dos-animais/protetor-da-fauna.png",
                            Name = "Protetor da Fauna",
                            TaskCount = 10
                        },
                        new
                        {
                            Id = new Guid("578aaa52-95ab-4f07-a0ba-012ed673a08c"),
                            CategoryId = new Guid("39488396-6021-490c-ab77-5c2a0b7faf01"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 978, DateTimeKind.Unspecified).AddTicks(1165),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/protecao-dos-animais/herói-das-patas.png",
                            Name = "Herói das Patas",
                            TaskCount = 20
                        },
                        new
                        {
                            Id = new Guid("a2f236fd-11d4-4e92-ad7f-75a5e7ad937a"),
                            CategoryId = new Guid("39488396-6021-490c-ab77-5c2a0b7faf01"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 978, DateTimeKind.Unspecified).AddTicks(1180),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/protecao-dos-animais/guardiao-dos-animais.png",
                            Name = "Guardião dos Animais",
                            TaskCount = 50
                        },
                        new
                        {
                            Id = new Guid("d6475000-0596-4731-a72e-bdec9f9b4e2f"),
                            CategoryId = new Guid("d949ddf8-559e-4bdd-bd98-260b5b6ddba4"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 978, DateTimeKind.Unspecified).AddTicks(1192),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/saude/anjo-da-vida.png",
                            Name = "Anjo da Vida",
                            TaskCount = 5
                        },
                        new
                        {
                            Id = new Guid("9e4242c5-525d-41a4-8b7f-7531479468bc"),
                            CategoryId = new Guid("d949ddf8-559e-4bdd-bd98-260b5b6ddba4"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 978, DateTimeKind.Unspecified).AddTicks(1200),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/saude/protetor-da-saúde.png",
                            Name = "Protetor da Saúde",
                            TaskCount = 10
                        },
                        new
                        {
                            Id = new Guid("b101c8d1-093d-4643-84ab-88725e393a20"),
                            CategoryId = new Guid("d949ddf8-559e-4bdd-bd98-260b5b6ddba4"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 978, DateTimeKind.Unspecified).AddTicks(1207),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/saude/herói-da-esperanca.png",
                            Name = "Herói da Esperança",
                            TaskCount = 20
                        },
                        new
                        {
                            Id = new Guid("2c4e76b8-39d3-4063-a905-7e7e8a5b5362"),
                            CategoryId = new Guid("d949ddf8-559e-4bdd-bd98-260b5b6ddba4"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 978, DateTimeKind.Unspecified).AddTicks(1218),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/saude/guardiao-da-vida.png",
                            Name = "Guardião da Vida",
                            TaskCount = 50
                        },
                        new
                        {
                            Id = new Guid("7566575b-352c-4695-abbb-38ccd46b58d1"),
                            CategoryId = new Guid("0b2a0553-4f69-4419-a4d3-9266d6c1079e"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 978, DateTimeKind.Unspecified).AddTicks(1226),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/esporte/atleta-solidário.png",
                            Name = "Atleta Solidário",
                            TaskCount = 5
                        },
                        new
                        {
                            Id = new Guid("d953a37a-125f-4600-a530-0c4b98085b87"),
                            CategoryId = new Guid("0b2a0553-4f69-4419-a4d3-9266d6c1079e"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 978, DateTimeKind.Unspecified).AddTicks(1245),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/esporte/protetor-esportivo.png",
                            Name = "Protetor Esportivo",
                            TaskCount = 10
                        },
                        new
                        {
                            Id = new Guid("7bab8d31-cc36-4418-ab20-b49e964108eb"),
                            CategoryId = new Guid("0b2a0553-4f69-4419-a4d3-9266d6c1079e"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 978, DateTimeKind.Unspecified).AddTicks(1252),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/esporte/herói-do-movimento.png",
                            Name = "Herói do Movimento",
                            TaskCount = 20
                        },
                        new
                        {
                            Id = new Guid("d3a04f7b-893f-48b5-a1a5-eacd22bf856b"),
                            CategoryId = new Guid("0b2a0553-4f69-4419-a4d3-9266d6c1079e"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 978, DateTimeKind.Unspecified).AddTicks(1260),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/esporte/guardiao-das-medalhas.png",
                            Name = "Guardião das Medalhas",
                            TaskCount = 50
                        },
                        new
                        {
                            Id = new Guid("18767f7c-74c2-4935-b13d-5c5a4b744215"),
                            CategoryId = new Guid("60ec27f0-45a0-47aa-a1f7-adf664858497"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 978, DateTimeKind.Unspecified).AddTicks(1278),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/doacao-de-alimento/provedor-de-esperanca.png",
                            Name = "Provedor de Esperança",
                            TaskCount = 5
                        },
                        new
                        {
                            Id = new Guid("9dd50554-12b9-4c9c-a011-d0fff9575696"),
                            CategoryId = new Guid("60ec27f0-45a0-47aa-a1f7-adf664858497"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 978, DateTimeKind.Unspecified).AddTicks(1319),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/doacao-de-alimento/protetor-da-esperanca.png",
                            Name = "Protetor da Esperança",
                            TaskCount = 10
                        },
                        new
                        {
                            Id = new Guid("ebaeb1f7-181d-4fa1-a691-95a3b147ea88"),
                            CategoryId = new Guid("60ec27f0-45a0-47aa-a1f7-adf664858497"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 978, DateTimeKind.Unspecified).AddTicks(1326),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/doacao-de-alimento/herói-da-nutricao.png",
                            Name = "Herói da Nutrição",
                            TaskCount = 20
                        },
                        new
                        {
                            Id = new Guid("0c6b6bf3-6b87-479c-a046-9df88b188b52"),
                            CategoryId = new Guid("60ec27f0-45a0-47aa-a1f7-adf664858497"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 978, DateTimeKind.Unspecified).AddTicks(1335),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/doacao-de-alimento/guardiao-da-fome-zero.png",
                            Name = "Guardião da Fome Zero",
                            TaskCount = 50
                        },
                        new
                        {
                            Id = new Guid("230bc3d0-e762-4d37-bf7b-9def85662c54"),
                            CategoryId = new Guid("94d277c6-9899-4e2b-9a3e-409eae7efc62"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 978, DateTimeKind.Unspecified).AddTicks(1349),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/sem-teto/amigo-de-rua.png",
                            Name = "Amigo de Rua",
                            TaskCount = 5
                        },
                        new
                        {
                            Id = new Guid("177fca7c-07a6-4e93-8eb8-f09a84becf26"),
                            CategoryId = new Guid("94d277c6-9899-4e2b-9a3e-409eae7efc62"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 978, DateTimeKind.Unspecified).AddTicks(1356),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/sem-teto/protetor-da-esperanca.png",
                            Name = "Protetor da Esperança",
                            TaskCount = 10
                        },
                        new
                        {
                            Id = new Guid("795eeb7a-0a11-4cf2-a5c1-dc89f5c03943"),
                            CategoryId = new Guid("94d277c6-9899-4e2b-9a3e-409eae7efc62"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 978, DateTimeKind.Unspecified).AddTicks(1363),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/sem-teto/herói-solidário.png",
                            Name = "Herói Solidário",
                            TaskCount = 20
                        },
                        new
                        {
                            Id = new Guid("579c8c70-6e44-4f00-a0e2-b1e97228ddb0"),
                            CategoryId = new Guid("94d277c6-9899-4e2b-9a3e-409eae7efc62"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 978, DateTimeKind.Unspecified).AddTicks(1371),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/sem-teto/guardiao-da-dignidade.png",
                            Name = "Guardião da Dignidade",
                            TaskCount = 50
                        },
                        new
                        {
                            Id = new Guid("5f25990b-50db-4d2a-98d4-96aac9985f67"),
                            CategoryId = new Guid("09f32a7e-53e1-4ead-bb91-9227cad71adc"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 978, DateTimeKind.Unspecified).AddTicks(1382),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/moradia/construtor-solidário.png",
                            Name = "Construtor Solidário",
                            TaskCount = 5
                        },
                        new
                        {
                            Id = new Guid("b0957b9e-495c-4e89-80cc-5b89c287295d"),
                            CategoryId = new Guid("09f32a7e-53e1-4ead-bb91-9227cad71adc"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 978, DateTimeKind.Unspecified).AddTicks(1390),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/moradia/protetor-dos-lares.png",
                            Name = "Protetor dos Lares",
                            TaskCount = 10
                        },
                        new
                        {
                            Id = new Guid("da280986-28f6-42fd-b4ec-3874043a4787"),
                            CategoryId = new Guid("09f32a7e-53e1-4ead-bb91-9227cad71adc"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 978, DateTimeKind.Unspecified).AddTicks(1406),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/moradia/herói-da-moradia.png",
                            Name = "Herói da Moradia",
                            TaskCount = 20
                        },
                        new
                        {
                            Id = new Guid("12a24dc8-7427-4acc-b140-2eb5f7dcb733"),
                            CategoryId = new Guid("09f32a7e-53e1-4ead-bb91-9227cad71adc"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 978, DateTimeKind.Unspecified).AddTicks(1413),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/moradia/guardiao-dos-lares.png",
                            Name = "Guardião dos Lares",
                            TaskCount = 50
                        },
                        new
                        {
                            Id = new Guid("8dd996b0-f044-40f0-9e26-fcb7058b3c55"),
                            CategoryId = new Guid("5bdd2754-befb-478d-a09d-4a78a93179be"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 978, DateTimeKind.Unspecified).AddTicks(1422),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/cultura/curador-comunitário.png",
                            Name = "Curador Comunitário",
                            TaskCount = 5
                        },
                        new
                        {
                            Id = new Guid("ebc60a7c-e387-4037-b870-02f204fd9d9c"),
                            CategoryId = new Guid("5bdd2754-befb-478d-a09d-4a78a93179be"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 978, DateTimeKind.Unspecified).AddTicks(1430),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/cultura/protetor-da-tradicao.png",
                            Name = "Protetor da Tradição",
                            TaskCount = 10
                        },
                        new
                        {
                            Id = new Guid("1154cf64-121c-464c-ad4d-260187e392ae"),
                            CategoryId = new Guid("5bdd2754-befb-478d-a09d-4a78a93179be"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 978, DateTimeKind.Unspecified).AddTicks(1438),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/cultura/herói-cultural.png",
                            Name = "Herói Cultural",
                            TaskCount = 20
                        },
                        new
                        {
                            Id = new Guid("5a393dbf-dbf4-4bb2-b2eb-0c75aa335ac5"),
                            CategoryId = new Guid("5bdd2754-befb-478d-a09d-4a78a93179be"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 978, DateTimeKind.Unspecified).AddTicks(1446),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/cultura/guardiao-das-artes.png",
                            Name = "Guardião das Artes",
                            TaskCount = 50
                        });
                });

            modelBuilder.Entity("Voluntr.Domain.Models.AchievementCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AchievementCategory");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8c31424d-742d-4239-b49c-199303875ab4"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 975, DateTimeKind.Unspecified).AddTicks(4995),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/meio-ambiente/meio-ambiente.png",
                            Name = "Meio ambiente"
                        },
                        new
                        {
                            Id = new Guid("5d7f3b5a-403a-4ae5-811b-3fd9a07150d5"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 975, DateTimeKind.Unspecified).AddTicks(7161),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/educacao/educacao.png",
                            Name = "Educação"
                        },
                        new
                        {
                            Id = new Guid("39488396-6021-490c-ab77-5c2a0b7faf01"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 975, DateTimeKind.Unspecified).AddTicks(7188),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/protecao-dos-animais/protecao-dos-animais.png",
                            Name = "Proteção dos animais"
                        },
                        new
                        {
                            Id = new Guid("d949ddf8-559e-4bdd-bd98-260b5b6ddba4"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 975, DateTimeKind.Unspecified).AddTicks(7199),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/saude/saude.png",
                            Name = "Saúde"
                        },
                        new
                        {
                            Id = new Guid("0b2a0553-4f69-4419-a4d3-9266d6c1079e"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 975, DateTimeKind.Unspecified).AddTicks(7211),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/esporte/esporte.png",
                            Name = "Esporte"
                        },
                        new
                        {
                            Id = new Guid("60ec27f0-45a0-47aa-a1f7-adf664858497"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 975, DateTimeKind.Unspecified).AddTicks(7217),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/doacao-de-alimento/doacao-de-alimento.png",
                            Name = "Doação"
                        },
                        new
                        {
                            Id = new Guid("94d277c6-9899-4e2b-9a3e-409eae7efc62"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 975, DateTimeKind.Unspecified).AddTicks(7221),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/sem-teto/sem-teto.png",
                            Name = "Apoio aos sem-teto"
                        },
                        new
                        {
                            Id = new Guid("09f32a7e-53e1-4ead-bb91-9227cad71adc"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 975, DateTimeKind.Unspecified).AddTicks(7232),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/moradia/moradia.png",
                            Name = "Moradia"
                        },
                        new
                        {
                            Id = new Guid("5bdd2754-befb-478d-a09d-4a78a93179be"),
                            CreatedAt = new DateTime(2024, 12, 19, 17, 5, 21, 975, DateTimeKind.Unspecified).AddTicks(7238),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/cultura/cultura.png",
                            Name = "Cultura"
                        });
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Complement")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Neighbourhood")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Email", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("TemplateId")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Email");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Ngo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Ngo");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.OAuthProvider", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailProperty")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmailVerifiedProperty")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameProperty")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PictureProperty")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserInfoApiUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OAuthProvider");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("EmailVerified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("OAuthProviderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Paused")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Phone")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OAuthProviderId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.UserAchievement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AchievementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AchievementId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAchievement");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.UserAddress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAddress");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Volunteer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Volunteer");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Achievement", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.AchievementCategory", "Category")
                        .WithMany("Achievements")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Voluntr.Domain.Models.User", null)
                        .WithMany("Achievements")
                        .HasForeignKey("UserId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Address", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.User", null)
                        .WithMany("Addresses")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Company", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Ngo", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Notification", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.User", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.OAuthProvider", "OAuthProvider")
                        .WithMany()
                        .HasForeignKey("OAuthProviderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("OAuthProvider");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.UserAchievement", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Achievement", "Achievement")
                        .WithMany()
                        .HasForeignKey("AchievementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany("UserAchievements")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Achievement");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.UserAddress", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany("UserAddresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Volunteer", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.AchievementCategory", b =>
                {
                    b.Navigation("Achievements");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.User", b =>
                {
                    b.Navigation("Achievements");

                    b.Navigation("Addresses");

                    b.Navigation("Notifications");

                    b.Navigation("UserAchievements");

                    b.Navigation("UserAddresses");
                });
#pragma warning restore 612, 618
        }
    }
}
