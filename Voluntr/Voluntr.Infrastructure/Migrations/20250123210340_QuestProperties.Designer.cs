// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Voluntr.Infrastructure.Contexts;

#nullable disable

namespace Voluntr.Infrastructure.Migrations
{
    [DbContext(typeof(SqlContext))]
    [Migration("20250123210340_QuestProperties")]
    partial class QuestProperties
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Voluntr.Domain.Models.Achievement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CauseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("QuestCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CauseId");

                    b.ToTable("Achievement");

                    b.HasData(
                        new
                        {
                            Id = new Guid("82987e59-6a1b-4c2c-b5fe-7f80a211dddd"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 395, DateTimeKind.Unspecified).AddTicks(6719),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/arregacando-as-mangas.png",
                            Name = "Arregaçando as Mangas",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("e9c1c24a-ccef-4741-b0c5-2f5eaae517c6"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 395, DateTimeKind.Unspecified).AddTicks(7219),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/fazedor-de-impacto.png",
                            Name = "Fazedor de Impacto",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("45ca5c42-daa8-4193-a3b0-27ca683393fb"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 395, DateTimeKind.Unspecified).AddTicks(7242),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/agente-da-mudanca.png",
                            Name = "Agente de Mudança",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("6d055586-1353-439f-bdea-1781386ef87c"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 395, DateTimeKind.Unspecified).AddTicks(7254),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/heroi-da-comunidade.png",
                            Name = "Heroi da Comunidade",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("c0f93d48-2822-4d27-9ce1-2fb19a7b30ee"),
                            CauseId = new Guid("d04b0fe3-f08c-45ad-8746-0b65112a0d54"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 395, DateTimeKind.Unspecified).AddTicks(9579),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/meio-ambiente/eco-guardiao.png",
                            Name = "Eco-Guardião",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("d83909ee-01d3-475e-8524-153346958c8d"),
                            CauseId = new Guid("d04b0fe3-f08c-45ad-8746-0b65112a0d54"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 397, DateTimeKind.Unspecified).AddTicks(4306),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/meio-ambiente/protetor-da-terra.png",
                            Name = "Protetor da Terra",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("2ac067f2-57cd-4e29-a32d-2a82aafca1d9"),
                            CauseId = new Guid("d04b0fe3-f08c-45ad-8746-0b65112a0d54"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 397, DateTimeKind.Unspecified).AddTicks(4387),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/meio-ambiente/herói-verde.png",
                            Name = "Herói Verde",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("b450ce05-7d36-400c-9d1e-4cdd75e214d5"),
                            CauseId = new Guid("d04b0fe3-f08c-45ad-8746-0b65112a0d54"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 397, DateTimeKind.Unspecified).AddTicks(4428),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/meio-ambiente/guardiao-ambiental.png",
                            Name = "Guardião Ambiental",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("44eb6b1d-da54-4ff6-a52b-62fede5a6669"),
                            CauseId = new Guid("225ad5bf-fc9a-4d41-aa3c-0b16956e5ee2"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 397, DateTimeKind.Unspecified).AddTicks(4441),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/educacao/tutor-comunitário.png",
                            Name = "Tutor Comunitário",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("e010f032-adde-40b2-9dce-05b9aaee5521"),
                            CauseId = new Guid("225ad5bf-fc9a-4d41-aa3c-0b16956e5ee2"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 397, DateTimeKind.Unspecified).AddTicks(4450),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/educacao/protetor-do-conhecimento.png",
                            Name = "Protetor do Conhecimento",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("e1fa7709-ba86-418f-807f-37a0dd088965"),
                            CauseId = new Guid("225ad5bf-fc9a-4d41-aa3c-0b16956e5ee2"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 397, DateTimeKind.Unspecified).AddTicks(4460),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/educacao/herói-do-futuro.png",
                            Name = "Herói do Futuro",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("4cd24495-3cfb-43fb-8c21-96246fd203f4"),
                            CauseId = new Guid("225ad5bf-fc9a-4d41-aa3c-0b16956e5ee2"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 397, DateTimeKind.Unspecified).AddTicks(4472),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/educacao/guardiao-da-transformacao.png",
                            Name = "Guardião da Transformação",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("20b55092-364a-4f94-804d-2f0bccedecc8"),
                            CauseId = new Guid("eb84f24e-98e7-4ae3-9412-04a7fdfd2617"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 397, DateTimeKind.Unspecified).AddTicks(4482),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/protecao-dos-animais/anjo-dos-animais.png",
                            Name = "Anjo dos Animais",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("e3afcdc0-82af-4b34-891e-5d0b1713704c"),
                            CauseId = new Guid("eb84f24e-98e7-4ae3-9412-04a7fdfd2617"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 397, DateTimeKind.Unspecified).AddTicks(4489),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/protecao-dos-animais/protetor-da-fauna.png",
                            Name = "Protetor da Fauna",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("4d600364-a1e9-4e46-b898-0815b893eb33"),
                            CauseId = new Guid("eb84f24e-98e7-4ae3-9412-04a7fdfd2617"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 397, DateTimeKind.Unspecified).AddTicks(4495),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/protecao-dos-animais/herói-das-patas.png",
                            Name = "Herói das Patas",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("b1660ec9-efc9-4ccd-b85e-2f82675972bd"),
                            CauseId = new Guid("eb84f24e-98e7-4ae3-9412-04a7fdfd2617"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 397, DateTimeKind.Unspecified).AddTicks(4501),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/protecao-dos-animais/guardiao-dos-animais.png",
                            Name = "Guardião dos Animais",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("b631fa3a-e406-4b90-b814-e0fc3354dc65"),
                            CauseId = new Guid("29e7e407-b328-4e9a-b7fa-3032295acf87"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 397, DateTimeKind.Unspecified).AddTicks(4510),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/saude/anjo-da-vida.png",
                            Name = "Anjo da Vida",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("79659faf-44e0-44dc-8896-c63bba85f55d"),
                            CauseId = new Guid("29e7e407-b328-4e9a-b7fa-3032295acf87"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 397, DateTimeKind.Unspecified).AddTicks(4533),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/saude/protetor-da-saúde.png",
                            Name = "Protetor da Saúde",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("a78d2450-8466-4a6f-bf40-a88d151d291c"),
                            CauseId = new Guid("29e7e407-b328-4e9a-b7fa-3032295acf87"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 397, DateTimeKind.Unspecified).AddTicks(4548),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/saude/herói-da-esperanca.png",
                            Name = "Herói da Esperança",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("3906f0bf-f087-41f3-8258-12c4566b0964"),
                            CauseId = new Guid("29e7e407-b328-4e9a-b7fa-3032295acf87"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 397, DateTimeKind.Unspecified).AddTicks(4558),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/saude/guardiao-da-vida.png",
                            Name = "Guardião da Vida",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("35de2804-93b2-49d8-bddc-e7774e60ea96"),
                            CauseId = new Guid("581bb428-5b15-4b0b-b07f-4a5eac770c31"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 397, DateTimeKind.Unspecified).AddTicks(4566),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/esporte/atleta-solidário.png",
                            Name = "Atleta Solidário",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("13a1b73e-70a7-4abf-9aef-6975d9b94866"),
                            CauseId = new Guid("581bb428-5b15-4b0b-b07f-4a5eac770c31"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 397, DateTimeKind.Unspecified).AddTicks(4578),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/esporte/protetor-esportivo.png",
                            Name = "Protetor Esportivo",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("ade87b2c-96f6-4d64-aa12-79a2598f8dc8"),
                            CauseId = new Guid("581bb428-5b15-4b0b-b07f-4a5eac770c31"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 397, DateTimeKind.Unspecified).AddTicks(4584),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/esporte/herói-do-movimento.png",
                            Name = "Herói do Movimento",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("c3a73e58-5fe2-4a2b-b3a9-620f6c83d255"),
                            CauseId = new Guid("581bb428-5b15-4b0b-b07f-4a5eac770c31"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 397, DateTimeKind.Unspecified).AddTicks(4590),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/esporte/guardiao-das-medalhas.png",
                            Name = "Guardião das Medalhas",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("655943b7-9e3c-4233-91e3-0b4f7e257714"),
                            CauseId = new Guid("a0988ad3-cb3a-444e-aa7a-60352658b949"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 397, DateTimeKind.Unspecified).AddTicks(4604),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/doacao-de-alimento/provedor-de-esperanca.png",
                            Name = "Provedor de Esperança",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("3aaa26f3-7722-4035-a505-4a8c5a21081d"),
                            CauseId = new Guid("a0988ad3-cb3a-444e-aa7a-60352658b949"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 397, DateTimeKind.Unspecified).AddTicks(4611),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/doacao-de-alimento/protetor-da-esperanca.png",
                            Name = "Protetor da Esperança",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("f1d26f05-fdbf-44f2-b559-b8de906ce1d3"),
                            CauseId = new Guid("a0988ad3-cb3a-444e-aa7a-60352658b949"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 397, DateTimeKind.Unspecified).AddTicks(4616),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/doacao-de-alimento/herói-da-nutricao.png",
                            Name = "Herói da Nutrição",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("0a37f021-bdfb-439e-ae88-b1c9f395af79"),
                            CauseId = new Guid("a0988ad3-cb3a-444e-aa7a-60352658b949"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 397, DateTimeKind.Unspecified).AddTicks(4624),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/doacao-de-alimento/guardiao-da-fome-zero.png",
                            Name = "Guardião da Fome Zero",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("b511b2b0-bb9e-4474-b7b4-d265db2e767e"),
                            CauseId = new Guid("750a75c7-3115-442c-af6d-e61599c57d12"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 397, DateTimeKind.Unspecified).AddTicks(4632),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/sem-teto/amigo-de-rua.png",
                            Name = "Amigo de Rua",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("beb04c99-43d7-4c07-8218-778b5f93d820"),
                            CauseId = new Guid("750a75c7-3115-442c-af6d-e61599c57d12"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 397, DateTimeKind.Unspecified).AddTicks(4638),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/sem-teto/protetor-da-esperanca.png",
                            Name = "Protetor da Esperança",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("25b216fa-2fba-4690-9289-1f223b7e676f"),
                            CauseId = new Guid("750a75c7-3115-442c-af6d-e61599c57d12"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 397, DateTimeKind.Unspecified).AddTicks(4644),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/sem-teto/herói-solidário.png",
                            Name = "Herói Solidário",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("ceed9525-bed2-46ff-b3f2-3f9849b6908b"),
                            CauseId = new Guid("750a75c7-3115-442c-af6d-e61599c57d12"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 397, DateTimeKind.Unspecified).AddTicks(4650),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/sem-teto/guardiao-da-dignidade.png",
                            Name = "Guardião da Dignidade",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("cfad798f-adb4-4bc3-b531-46d0b0d7e300"),
                            CauseId = new Guid("6a9c424f-56a7-47d2-8e83-442ea719bbc6"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 397, DateTimeKind.Unspecified).AddTicks(4658),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/moradia/construtor-solidário.png",
                            Name = "Construtor Solidário",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("4cd2d292-0d60-4f72-8959-108367fdeee9"),
                            CauseId = new Guid("6a9c424f-56a7-47d2-8e83-442ea719bbc6"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 397, DateTimeKind.Unspecified).AddTicks(4673),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/moradia/protetor-dos-lares.png",
                            Name = "Protetor dos Lares",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("a60d8ef8-47b8-4f43-af99-5fd052313681"),
                            CauseId = new Guid("6a9c424f-56a7-47d2-8e83-442ea719bbc6"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 397, DateTimeKind.Unspecified).AddTicks(4697),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/moradia/herói-da-moradia.png",
                            Name = "Herói da Moradia",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("886c8a05-7914-4fe4-aa35-d98f1de32776"),
                            CauseId = new Guid("6a9c424f-56a7-47d2-8e83-442ea719bbc6"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 397, DateTimeKind.Unspecified).AddTicks(4705),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/moradia/guardiao-dos-lares.png",
                            Name = "Guardião dos Lares",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("e8ba66ce-e574-49ae-b95d-f4f374e23e4e"),
                            CauseId = new Guid("c7b846f4-2872-42af-bd26-91f4e60fe3d6"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 397, DateTimeKind.Unspecified).AddTicks(4712),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/cultura/curador-comunitário.png",
                            Name = "Curador Comunitário",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("dcf9861a-74ab-4d62-8faf-88b8b9a5e59e"),
                            CauseId = new Guid("c7b846f4-2872-42af-bd26-91f4e60fe3d6"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 397, DateTimeKind.Unspecified).AddTicks(4719),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/cultura/protetor-da-tradicao.png",
                            Name = "Protetor da Tradição",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("6d1027e7-cfc0-42ce-bf75-6996af5d54b3"),
                            CauseId = new Guid("c7b846f4-2872-42af-bd26-91f4e60fe3d6"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 397, DateTimeKind.Unspecified).AddTicks(4725),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/cultura/herói-cultural.png",
                            Name = "Herói Cultural",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("0aa5bd96-10f3-4b82-8bbe-65789a9e50ef"),
                            CauseId = new Guid("c7b846f4-2872-42af-bd26-91f4e60fe3d6"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 397, DateTimeKind.Unspecified).AddTicks(4731),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/cultura/guardiao-das-artes.png",
                            Name = "Guardião das Artes",
                            QuestCount = 50
                        });
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Complement")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Neighbourhood")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid?>("QuestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Id");

                    b.HasIndex("QuestId");

                    b.HasIndex("UserId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Cause", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cause");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d04b0fe3-f08c-45ad-8746-0b65112a0d54"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 395, DateTimeKind.Unspecified).AddTicks(219),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/meio-ambiente/meio-ambiente.png",
                            Name = "Meio ambiente"
                        },
                        new
                        {
                            Id = new Guid("225ad5bf-fc9a-4d41-aa3c-0b16956e5ee2"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 395, DateTimeKind.Unspecified).AddTicks(2452),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/educacao/educacao.png",
                            Name = "Educação"
                        },
                        new
                        {
                            Id = new Guid("eb84f24e-98e7-4ae3-9412-04a7fdfd2617"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 395, DateTimeKind.Unspecified).AddTicks(2481),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/protecao-dos-animais/protecao-dos-animais.png",
                            Name = "Proteção dos animais"
                        },
                        new
                        {
                            Id = new Guid("29e7e407-b328-4e9a-b7fa-3032295acf87"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 395, DateTimeKind.Unspecified).AddTicks(2490),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/saude/saude.png",
                            Name = "Saúde"
                        },
                        new
                        {
                            Id = new Guid("581bb428-5b15-4b0b-b07f-4a5eac770c31"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 395, DateTimeKind.Unspecified).AddTicks(2513),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/esporte/esporte.png",
                            Name = "Esporte"
                        },
                        new
                        {
                            Id = new Guid("a0988ad3-cb3a-444e-aa7a-60352658b949"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 395, DateTimeKind.Unspecified).AddTicks(2520),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/doacao-de-alimento/doacao-de-alimento.png",
                            Name = "Doação"
                        },
                        new
                        {
                            Id = new Guid("750a75c7-3115-442c-af6d-e61599c57d12"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 395, DateTimeKind.Unspecified).AddTicks(2529),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/sem-teto/sem-teto.png",
                            Name = "Apoio aos sem-teto"
                        },
                        new
                        {
                            Id = new Guid("6a9c424f-56a7-47d2-8e83-442ea719bbc6"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 395, DateTimeKind.Unspecified).AddTicks(2541),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/moradia/moradia.png",
                            Name = "Moradia"
                        },
                        new
                        {
                            Id = new Guid("c7b846f4-2872-42af-bd26-91f4e60fe3d6"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 395, DateTimeKind.Unspecified).AddTicks(2546),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/cultura/cultura.png",
                            Name = "Cultura"
                        });
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Email", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("TemplateId")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Email");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Ngo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Ngo");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.OAuthProvider", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailProperty")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmailVerifiedProperty")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameProperty")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PictureProperty")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserInfoApiUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OAuthProvider");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.OnboardingTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Redirect")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OnboardingTask");

                    b.HasData(
                        new
                        {
                            Id = new Guid("17d403d7-ce12-4bd8-b7d1-18ace54177f4"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 397, DateTimeKind.Unspecified).AddTicks(7070),
                            Description = "Adicione uma foto à sua conta para que ONGs e outros voluntários o reconheçam.",
                            Image = "https://voluntrprodeastusst.blob.core.windows.net/images/onboarding/photo.png",
                            Name = "Apresente-se à comunidade",
                            Redirect = "/profile",
                            Type = "Foto"
                        },
                        new
                        {
                            Id = new Guid("bad95737-2ba7-407c-bcbf-88875bafb56c"),
                            CreatedAt = new DateTime(2025, 1, 23, 18, 3, 40, 398, DateTimeKind.Unspecified).AddTicks(105),
                            Description = "Escolha causas que te inspiram. Assim, você verá missões que combinam com seus interesses.",
                            Image = "https://voluntrprodeastusst.blob.core.windows.net/images/onboarding/cause.png",
                            Name = "Hora do match",
                            Redirect = "/profile",
                            Type = "Causa"
                        });
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("NgoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NgoId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Quest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemote")
                        .HasColumnType("bit");

                    b.Property<int>("MaxVolunteers")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Reward")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Quest");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.QuestAssignment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ImageAttachmentUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("QuestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubmissionResponse")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("VolunteerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("QuestId");

                    b.HasIndex("VolunteerId");

                    b.ToTable("QuestAssignment");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("EmailVerified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("OAuthProviderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Paused")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Phone")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OAuthProviderId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.UserAchievement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AchievementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AchievementId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAchievement");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.UserCause", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CauseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CauseId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCause");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Volunteer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nickname")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Volunteer");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Achievement", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Cause", "Cause")
                        .WithMany("Achievements")
                        .HasForeignKey("CauseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Cause");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Address", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Quest", "Quest")
                        .WithMany()
                        .HasForeignKey("QuestId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Quest");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Company", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Ngo", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Notification", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Project", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Ngo", "Ngo")
                        .WithMany("Projects")
                        .HasForeignKey("NgoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ngo");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Quest", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Project", "Project")
                        .WithMany("Quests")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.QuestAssignment", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Quest", "Quest")
                        .WithMany()
                        .HasForeignKey("QuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Voluntr.Domain.Models.Volunteer", "Volunteer")
                        .WithMany()
                        .HasForeignKey("VolunteerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Quest");

                    b.Navigation("Volunteer");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.User", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.OAuthProvider", "OAuthProvider")
                        .WithMany()
                        .HasForeignKey("OAuthProviderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("OAuthProvider");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.UserAchievement", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Achievement", "Achievement")
                        .WithMany()
                        .HasForeignKey("AchievementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Achievement");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.UserCause", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Cause", "Cause")
                        .WithMany()
                        .HasForeignKey("CauseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cause");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Volunteer", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Cause", b =>
                {
                    b.Navigation("Achievements");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Ngo", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Project", b =>
                {
                    b.Navigation("Quests");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.User", b =>
                {
                    b.Navigation("Notifications");
                });
#pragma warning restore 612, 618
        }
    }
}
