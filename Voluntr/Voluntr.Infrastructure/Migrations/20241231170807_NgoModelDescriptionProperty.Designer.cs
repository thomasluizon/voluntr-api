// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Voluntr.Infrastructure.Contexts;

#nullable disable

namespace Voluntr.Infrastructure.Migrations
{
    [DbContext(typeof(SqlContext))]
    [Migration("20241231170807_NgoModelDescriptionProperty")]
    partial class NgoModelDescriptionProperty
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Voluntr.Domain.Models.Achievement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CauseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("QuestCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CauseId");

                    b.ToTable("Achievement");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b5f6f922-6cb9-4913-ad27-30443d3dfdca"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 805, DateTimeKind.Unspecified).AddTicks(6500),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/arregacando-as-mangas.png",
                            Name = "Arregaçando as Mangas",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("5b49db59-e130-4e16-84ce-2518299877d8"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 805, DateTimeKind.Unspecified).AddTicks(7029),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/fazedor-de-impacto.png",
                            Name = "Fazedor de Impacto",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("7d38ade8-abe8-483b-bba2-641a6f65d509"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 805, DateTimeKind.Unspecified).AddTicks(7053),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/agente-da-mudanca.png",
                            Name = "Agente de Mudança",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("4bbdd634-22e0-452c-83bc-07dde80e880d"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 805, DateTimeKind.Unspecified).AddTicks(7063),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/heroi-da-comunidade.png",
                            Name = "Heroi da Comunidade",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("fdbb7fee-73b4-48d5-a22e-37591b3c3610"),
                            CauseId = new Guid("bf39e923-e309-4cc2-9cf6-d57a07be1a5c"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 805, DateTimeKind.Unspecified).AddTicks(9221),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/meio-ambiente/eco-guardiao.png",
                            Name = "Eco-Guardião",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("b3353d2e-3cf8-400a-a36d-300c64a5716b"),
                            CauseId = new Guid("bf39e923-e309-4cc2-9cf6-d57a07be1a5c"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(2426),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/meio-ambiente/protetor-da-terra.png",
                            Name = "Protetor da Terra",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("bdb4066f-8c88-4e10-812f-94248412cbce"),
                            CauseId = new Guid("bf39e923-e309-4cc2-9cf6-d57a07be1a5c"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(2530),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/meio-ambiente/herói-verde.png",
                            Name = "Herói Verde",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("8061d7e0-a9e0-44b1-8f35-b89d00b0932e"),
                            CauseId = new Guid("bf39e923-e309-4cc2-9cf6-d57a07be1a5c"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(2583),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/meio-ambiente/guardiao-ambiental.png",
                            Name = "Guardião Ambiental",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("d50b8906-08f8-4466-be4e-b3fb2c88c864"),
                            CauseId = new Guid("6a5fef16-c338-41bb-b2a8-319ab157d39e"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(2602),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/educacao/tutor-comunitário.png",
                            Name = "Tutor Comunitário",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("f94bb93a-44c6-4930-b035-095a78296f0c"),
                            CauseId = new Guid("6a5fef16-c338-41bb-b2a8-319ab157d39e"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(2612),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/educacao/protetor-do-conhecimento.png",
                            Name = "Protetor do Conhecimento",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("31b734de-e02f-4c69-b79e-5f34f4ccbf22"),
                            CauseId = new Guid("6a5fef16-c338-41bb-b2a8-319ab157d39e"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(2622),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/educacao/herói-do-futuro.png",
                            Name = "Herói do Futuro",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("6931d398-98d3-45f9-880e-540df768fce5"),
                            CauseId = new Guid("6a5fef16-c338-41bb-b2a8-319ab157d39e"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(2636),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/educacao/guardiao-da-transformacao.png",
                            Name = "Guardião da Transformação",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("c5199294-9056-4004-be26-efbb8429db18"),
                            CauseId = new Guid("62fa49f7-0795-4d3c-bda2-763a10f0154c"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(2657),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/protecao-dos-animais/anjo-dos-animais.png",
                            Name = "Anjo dos Animais",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("1b0d687d-92e2-441a-ab80-6372aa698709"),
                            CauseId = new Guid("62fa49f7-0795-4d3c-bda2-763a10f0154c"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(2669),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/protecao-dos-animais/protetor-da-fauna.png",
                            Name = "Protetor da Fauna",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("33e35f87-13dc-4ffa-bd31-3e44fe5b43de"),
                            CauseId = new Guid("62fa49f7-0795-4d3c-bda2-763a10f0154c"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(2679),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/protecao-dos-animais/herói-das-patas.png",
                            Name = "Herói das Patas",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("df7c09d8-0b2f-447b-a4f5-875f841ed503"),
                            CauseId = new Guid("62fa49f7-0795-4d3c-bda2-763a10f0154c"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(2687),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/protecao-dos-animais/guardiao-dos-animais.png",
                            Name = "Guardião dos Animais",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("776f71cc-cf7f-4eeb-9426-bfc248428d58"),
                            CauseId = new Guid("401ab223-f95a-4d39-86f3-1730d84998b9"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(2698),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/saude/anjo-da-vida.png",
                            Name = "Anjo da Vida",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("c932db5e-1dd9-4a6f-953d-796b92b794d1"),
                            CauseId = new Guid("401ab223-f95a-4d39-86f3-1730d84998b9"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(2706),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/saude/protetor-da-saúde.png",
                            Name = "Protetor da Saúde",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("934afcf3-6632-48bf-bcbf-9adce9e2eb69"),
                            CauseId = new Guid("401ab223-f95a-4d39-86f3-1730d84998b9"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(2718),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/saude/herói-da-esperanca.png",
                            Name = "Herói da Esperança",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("84c7ee86-1a36-4d04-b84e-98b491b10133"),
                            CauseId = new Guid("401ab223-f95a-4d39-86f3-1730d84998b9"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(2728),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/saude/guardiao-da-vida.png",
                            Name = "Guardião da Vida",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("94330bbf-d15e-4f1a-b62f-5dcab8540248"),
                            CauseId = new Guid("94be0bb8-df81-4e10-a0fc-b632e33a0369"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(2746),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/esporte/atleta-solidário.png",
                            Name = "Atleta Solidário",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("242b18a8-aea5-447a-ad67-2b82fb37958c"),
                            CauseId = new Guid("94be0bb8-df81-4e10-a0fc-b632e33a0369"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(2761),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/esporte/protetor-esportivo.png",
                            Name = "Protetor Esportivo",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("35f0ab9d-bd8d-4986-a11c-eed263985f7c"),
                            CauseId = new Guid("94be0bb8-df81-4e10-a0fc-b632e33a0369"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(2769),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/esporte/herói-do-movimento.png",
                            Name = "Herói do Movimento",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("29665153-db93-4d99-97ab-68f3acbeec69"),
                            CauseId = new Guid("94be0bb8-df81-4e10-a0fc-b632e33a0369"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(2778),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/esporte/guardiao-das-medalhas.png",
                            Name = "Guardião das Medalhas",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("a1fdb4d7-8693-4a9c-9276-8b39f807ac6a"),
                            CauseId = new Guid("bb8c9631-3a11-4c95-bf51-5f3592d78f05"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(2791),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/doacao-de-alimento/provedor-de-esperanca.png",
                            Name = "Provedor de Esperança",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("16af7d99-68ba-41f1-8478-b7b9ad53acf5"),
                            CauseId = new Guid("bb8c9631-3a11-4c95-bf51-5f3592d78f05"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(2800),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/doacao-de-alimento/protetor-da-esperanca.png",
                            Name = "Protetor da Esperança",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("2fca927e-3a10-4f85-a940-e9e42d346492"),
                            CauseId = new Guid("bb8c9631-3a11-4c95-bf51-5f3592d78f05"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(2807),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/doacao-de-alimento/herói-da-nutricao.png",
                            Name = "Herói da Nutrição",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("2d5e3346-dabb-4ee2-9c8a-c8a9c28ec8ee"),
                            CauseId = new Guid("bb8c9631-3a11-4c95-bf51-5f3592d78f05"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(2817),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/doacao-de-alimento/guardiao-da-fome-zero.png",
                            Name = "Guardião da Fome Zero",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("4ffb21ac-96db-4218-9b3f-e6d924de8bc9"),
                            CauseId = new Guid("730cd526-72e9-4d6f-80a2-18f7118b0347"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(2830),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/sem-teto/amigo-de-rua.png",
                            Name = "Amigo de Rua",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("b2326ad1-8c28-4ab5-968c-c13711061729"),
                            CauseId = new Guid("730cd526-72e9-4d6f-80a2-18f7118b0347"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(2839),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/sem-teto/protetor-da-esperanca.png",
                            Name = "Protetor da Esperança",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("94fb706c-3a89-438d-947d-9c1c0aa14020"),
                            CauseId = new Guid("730cd526-72e9-4d6f-80a2-18f7118b0347"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(2847),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/sem-teto/herói-solidário.png",
                            Name = "Herói Solidário",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("eed65170-e5cd-497c-9985-a36f35ae7238"),
                            CauseId = new Guid("730cd526-72e9-4d6f-80a2-18f7118b0347"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(2859),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/sem-teto/guardiao-da-dignidade.png",
                            Name = "Guardião da Dignidade",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("949c264f-e5cb-4ad4-876f-d760c1943e44"),
                            CauseId = new Guid("07599920-cbc8-4e6a-a863-738eed15de67"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(2869),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/moradia/construtor-solidário.png",
                            Name = "Construtor Solidário",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("f7c324ac-73fe-4cd4-bc9f-a526a8439d5d"),
                            CauseId = new Guid("07599920-cbc8-4e6a-a863-738eed15de67"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(2877),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/moradia/protetor-dos-lares.png",
                            Name = "Protetor dos Lares",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("8a39c776-f1ef-4930-9381-98a13a301624"),
                            CauseId = new Guid("07599920-cbc8-4e6a-a863-738eed15de67"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(2890),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/moradia/herói-da-moradia.png",
                            Name = "Herói da Moradia",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("22d8e23e-3de8-4a91-8797-3ec452702e90"),
                            CauseId = new Guid("07599920-cbc8-4e6a-a863-738eed15de67"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(2898),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/moradia/guardiao-dos-lares.png",
                            Name = "Guardião dos Lares",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("a27ed8fc-b90e-4302-b9ee-93b258d59c73"),
                            CauseId = new Guid("bccd458f-4607-41a3-9d22-313e08838ada"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(2908),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/cultura/curador-comunitário.png",
                            Name = "Curador Comunitário",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("4fbe75b6-921d-4cfc-9019-44ea0ff8275f"),
                            CauseId = new Guid("bccd458f-4607-41a3-9d22-313e08838ada"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(2917),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/cultura/protetor-da-tradicao.png",
                            Name = "Protetor da Tradição",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("e38e04ab-701d-4602-850b-1ba51d7608d0"),
                            CauseId = new Guid("bccd458f-4607-41a3-9d22-313e08838ada"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(2926),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/cultura/herói-cultural.png",
                            Name = "Herói Cultural",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("392fdd8e-9d29-4036-ad40-d5dd97e46a6c"),
                            CauseId = new Guid("bccd458f-4607-41a3-9d22-313e08838ada"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(2934),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/cultura/guardiao-das-artes.png",
                            Name = "Guardião das Artes",
                            QuestCount = 50
                        });
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Complement")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Neighbourhood")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Cause", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cause");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bf39e923-e309-4cc2-9cf6-d57a07be1a5c"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 805, DateTimeKind.Unspecified).AddTicks(468),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/meio-ambiente/meio-ambiente.png",
                            Name = "Meio ambiente"
                        },
                        new
                        {
                            Id = new Guid("6a5fef16-c338-41bb-b2a8-319ab157d39e"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 805, DateTimeKind.Unspecified).AddTicks(2503),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/educacao/educacao.png",
                            Name = "Educação"
                        },
                        new
                        {
                            Id = new Guid("62fa49f7-0795-4d3c-bda2-763a10f0154c"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 805, DateTimeKind.Unspecified).AddTicks(2533),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/protecao-dos-animais/protecao-dos-animais.png",
                            Name = "Proteção dos animais"
                        },
                        new
                        {
                            Id = new Guid("401ab223-f95a-4d39-86f3-1730d84998b9"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 805, DateTimeKind.Unspecified).AddTicks(2558),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/saude/saude.png",
                            Name = "Saúde"
                        },
                        new
                        {
                            Id = new Guid("94be0bb8-df81-4e10-a0fc-b632e33a0369"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 805, DateTimeKind.Unspecified).AddTicks(2567),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/esporte/esporte.png",
                            Name = "Esporte"
                        },
                        new
                        {
                            Id = new Guid("bb8c9631-3a11-4c95-bf51-5f3592d78f05"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 805, DateTimeKind.Unspecified).AddTicks(2582),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/doacao-de-alimento/doacao-de-alimento.png",
                            Name = "Doação"
                        },
                        new
                        {
                            Id = new Guid("730cd526-72e9-4d6f-80a2-18f7118b0347"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 805, DateTimeKind.Unspecified).AddTicks(2595),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/sem-teto/sem-teto.png",
                            Name = "Apoio aos sem-teto"
                        },
                        new
                        {
                            Id = new Guid("07599920-cbc8-4e6a-a863-738eed15de67"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 805, DateTimeKind.Unspecified).AddTicks(2603),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/moradia/moradia.png",
                            Name = "Moradia"
                        },
                        new
                        {
                            Id = new Guid("bccd458f-4607-41a3-9d22-313e08838ada"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 805, DateTimeKind.Unspecified).AddTicks(2614),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/cultura/cultura.png",
                            Name = "Cultura"
                        });
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Email", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("TemplateId")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Email");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Ngo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Ngo");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.OAuthProvider", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailProperty")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmailVerifiedProperty")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameProperty")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PictureProperty")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserInfoApiUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OAuthProvider");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.OnboardingTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Redirect")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OnboardingTask");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cb39c16a-2659-4bf3-895b-4c90e18fb014"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(5283),
                            Description = "Adicione uma foto à sua conta para que ONGs e outros voluntários o reconheçam.",
                            Image = "https://voluntrprodeastusst.blob.core.windows.net/images/onboarding/photo.png",
                            Name = "Apresente-se à comunidade",
                            Redirect = "/profile",
                            Type = "Foto"
                        },
                        new
                        {
                            Id = new Guid("9e0e7915-5a67-4e5e-adae-0769986c8f8f"),
                            CreatedAt = new DateTime(2024, 12, 31, 14, 8, 6, 807, DateTimeKind.Unspecified).AddTicks(8383),
                            Description = "Escolha causas que te inspiram. Assim, você verá missões que combinam com seus interesses.",
                            Image = "https://voluntrprodeastusst.blob.core.windows.net/images/onboarding/cause.png",
                            Name = "Hora do match",
                            Redirect = "/profile",
                            Type = "Causa"
                        });
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("NgoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NgoId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Quest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Reward")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Quest");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.QuestAssignment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ImageAttachmentUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("QuestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("VolunteerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("QuestId");

                    b.HasIndex("VolunteerId");

                    b.ToTable("QuestAssignment");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("EmailVerified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("OAuthProviderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Paused")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Phone")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OAuthProviderId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.UserAchievement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AchievementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AchievementId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAchievement");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.UserCause", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CauseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CauseId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCause");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Volunteer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Volunteer");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Achievement", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Cause", "Cause")
                        .WithMany("Achievements")
                        .HasForeignKey("CauseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Cause");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Address", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Company", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Ngo", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Notification", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Project", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Ngo", "Ngo")
                        .WithMany("Projects")
                        .HasForeignKey("NgoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ngo");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Quest", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Project", "Project")
                        .WithMany("Quests")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.QuestAssignment", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Quest", "Quest")
                        .WithMany()
                        .HasForeignKey("QuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Voluntr.Domain.Models.Volunteer", "Volunteer")
                        .WithMany()
                        .HasForeignKey("VolunteerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Quest");

                    b.Navigation("Volunteer");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.User", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.OAuthProvider", "OAuthProvider")
                        .WithMany()
                        .HasForeignKey("OAuthProviderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("OAuthProvider");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.UserAchievement", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Achievement", "Achievement")
                        .WithMany()
                        .HasForeignKey("AchievementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Achievement");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.UserCause", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Cause", "Cause")
                        .WithMany()
                        .HasForeignKey("CauseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cause");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Volunteer", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Cause", b =>
                {
                    b.Navigation("Achievements");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Ngo", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Project", b =>
                {
                    b.Navigation("Quests");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.User", b =>
                {
                    b.Navigation("Notifications");
                });
#pragma warning restore 612, 618
        }
    }
}
