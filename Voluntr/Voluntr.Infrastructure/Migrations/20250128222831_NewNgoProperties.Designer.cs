// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Voluntr.Infrastructure.Contexts;

#nullable disable

namespace Voluntr.Infrastructure.Migrations
{
    [DbContext(typeof(SqlContext))]
    [Migration("20250128222831_NewNgoProperties")]
    partial class NewNgoProperties
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Voluntr.Domain.Models.Achievement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CauseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("QuestCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CauseId");

                    b.ToTable("Achievement");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9ffd6dfc-da97-43ad-9228-a9c372a155df"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 954, DateTimeKind.Unspecified).AddTicks(2776),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/arregacando-as-mangas.png",
                            Name = "Arregaçando as Mangas",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("8c5a7874-c0b2-49fe-9a75-23780726a53d"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 954, DateTimeKind.Unspecified).AddTicks(3340),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/fazedor-de-impacto.png",
                            Name = "Fazedor de Impacto",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("bdc5c02e-d3f6-4ea7-87aa-196ac01fc8d0"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 954, DateTimeKind.Unspecified).AddTicks(3362),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/agente-da-mudanca.png",
                            Name = "Agente de Mudança",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("3635f0fa-3dff-463e-bc77-b77b2b5eed88"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 954, DateTimeKind.Unspecified).AddTicks(3369),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/heroi-da-comunidade.png",
                            Name = "Heroi da Comunidade",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("18ed4f6a-a24a-403f-aa22-a855987790d3"),
                            CauseId = new Guid("90b3edbe-1324-45c1-9c57-df4af3ceed9e"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 954, DateTimeKind.Unspecified).AddTicks(5414),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/meio-ambiente/eco-guardiao.png",
                            Name = "Eco-Guardião",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("21ba37ad-5f1d-49d4-8164-c4208f46f7a7"),
                            CauseId = new Guid("90b3edbe-1324-45c1-9c57-df4af3ceed9e"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 956, DateTimeKind.Unspecified).AddTicks(7411),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/meio-ambiente/protetor-da-terra.png",
                            Name = "Protetor da Terra",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("91383b7a-dd75-4dd7-9294-1408c6ed41b1"),
                            CauseId = new Guid("90b3edbe-1324-45c1-9c57-df4af3ceed9e"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 956, DateTimeKind.Unspecified).AddTicks(7501),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/meio-ambiente/herói-verde.png",
                            Name = "Herói Verde",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("040c80dc-da30-48fd-a84e-e54a7b24c52c"),
                            CauseId = new Guid("90b3edbe-1324-45c1-9c57-df4af3ceed9e"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 956, DateTimeKind.Unspecified).AddTicks(7546),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/meio-ambiente/guardiao-ambiental.png",
                            Name = "Guardião Ambiental",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("85930ff0-92aa-4456-83b6-6fc2c140bb63"),
                            CauseId = new Guid("e02eb619-9980-40af-b731-e18ac1f33330"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 956, DateTimeKind.Unspecified).AddTicks(7561),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/educacao/tutor-comunitário.png",
                            Name = "Tutor Comunitário",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("c5455946-5399-431f-9a5c-b6b248562572"),
                            CauseId = new Guid("e02eb619-9980-40af-b731-e18ac1f33330"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 956, DateTimeKind.Unspecified).AddTicks(7569),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/educacao/protetor-do-conhecimento.png",
                            Name = "Protetor do Conhecimento",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("53b8eca2-e328-493c-8ff0-6fb8f68fe00c"),
                            CauseId = new Guid("e02eb619-9980-40af-b731-e18ac1f33330"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 956, DateTimeKind.Unspecified).AddTicks(7579),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/educacao/herói-do-futuro.png",
                            Name = "Herói do Futuro",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("6d40b27d-e99a-4e80-96ae-23247c94b519"),
                            CauseId = new Guid("e02eb619-9980-40af-b731-e18ac1f33330"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 956, DateTimeKind.Unspecified).AddTicks(7586),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/educacao/guardiao-da-transformacao.png",
                            Name = "Guardião da Transformação",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("c8cd01a7-a1cc-4075-80fc-0954819b9660"),
                            CauseId = new Guid("c0238afc-8bfc-499f-b26b-73662c8ee715"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 956, DateTimeKind.Unspecified).AddTicks(7595),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/protecao-dos-animais/anjo-dos-animais.png",
                            Name = "Anjo dos Animais",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("3c90031f-fd2a-4ce9-94d7-4bc8d2784323"),
                            CauseId = new Guid("c0238afc-8bfc-499f-b26b-73662c8ee715"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 956, DateTimeKind.Unspecified).AddTicks(7604),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/protecao-dos-animais/protetor-da-fauna.png",
                            Name = "Protetor da Fauna",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("28081f96-62aa-40c6-ba82-a4b1cb555998"),
                            CauseId = new Guid("c0238afc-8bfc-499f-b26b-73662c8ee715"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 956, DateTimeKind.Unspecified).AddTicks(7613),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/protecao-dos-animais/herói-das-patas.png",
                            Name = "Herói das Patas",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("1f9ed240-4b7f-40a1-b200-d9b7e28437ad"),
                            CauseId = new Guid("c0238afc-8bfc-499f-b26b-73662c8ee715"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 956, DateTimeKind.Unspecified).AddTicks(7619),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/protecao-dos-animais/guardiao-dos-animais.png",
                            Name = "Guardião dos Animais",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("be38c006-c4ce-4088-b5f2-cf1a4ccc23fb"),
                            CauseId = new Guid("c8003987-fdb3-45dc-af77-a26f21b356b2"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 956, DateTimeKind.Unspecified).AddTicks(7627),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/saude/anjo-da-vida.png",
                            Name = "Anjo da Vida",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("c2bf697a-c7a4-4022-94ef-80b05bbf05ae"),
                            CauseId = new Guid("c8003987-fdb3-45dc-af77-a26f21b356b2"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 956, DateTimeKind.Unspecified).AddTicks(7633),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/saude/protetor-da-saúde.png",
                            Name = "Protetor da Saúde",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("442ecce8-d193-4ea8-80fa-419b21ead200"),
                            CauseId = new Guid("c8003987-fdb3-45dc-af77-a26f21b356b2"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 956, DateTimeKind.Unspecified).AddTicks(7643),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/saude/herói-da-esperanca.png",
                            Name = "Herói da Esperança",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("e0742bc6-55a5-4173-b3fb-aa653dd04b63"),
                            CauseId = new Guid("c8003987-fdb3-45dc-af77-a26f21b356b2"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 956, DateTimeKind.Unspecified).AddTicks(7650),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/saude/guardiao-da-vida.png",
                            Name = "Guardião da Vida",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("7f0751b7-fd29-4682-ba1b-b2e08634860c"),
                            CauseId = new Guid("0f379564-b447-4711-ba4f-c356c98cb88b"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 956, DateTimeKind.Unspecified).AddTicks(7669),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/esporte/atleta-solidário.png",
                            Name = "Atleta Solidário",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("3891099a-322f-484e-b8fa-aee0678b2d76"),
                            CauseId = new Guid("0f379564-b447-4711-ba4f-c356c98cb88b"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 956, DateTimeKind.Unspecified).AddTicks(7682),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/esporte/protetor-esportivo.png",
                            Name = "Protetor Esportivo",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("68a2a632-a885-4e62-8f38-6e776a2731d8"),
                            CauseId = new Guid("0f379564-b447-4711-ba4f-c356c98cb88b"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 956, DateTimeKind.Unspecified).AddTicks(7688),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/esporte/herói-do-movimento.png",
                            Name = "Herói do Movimento",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("ebfe859f-1aec-43a0-addd-3e715bb27020"),
                            CauseId = new Guid("0f379564-b447-4711-ba4f-c356c98cb88b"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 956, DateTimeKind.Unspecified).AddTicks(7694),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/esporte/guardiao-das-medalhas.png",
                            Name = "Guardião das Medalhas",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("076f9f32-e1de-424e-8cc1-0f4db06e8ded"),
                            CauseId = new Guid("ea97da90-4f47-4548-a4b7-dccc57d70919"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 956, DateTimeKind.Unspecified).AddTicks(7705),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/doacao-de-alimento/provedor-de-esperanca.png",
                            Name = "Provedor de Esperança",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("1b5a16d8-364a-4725-b612-387fe2a5fb76"),
                            CauseId = new Guid("ea97da90-4f47-4548-a4b7-dccc57d70919"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 956, DateTimeKind.Unspecified).AddTicks(7711),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/doacao-de-alimento/protetor-da-esperanca.png",
                            Name = "Protetor da Esperança",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("5124b54f-44ac-4408-8c11-b160e2435a27"),
                            CauseId = new Guid("ea97da90-4f47-4548-a4b7-dccc57d70919"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 956, DateTimeKind.Unspecified).AddTicks(7716),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/doacao-de-alimento/herói-da-nutricao.png",
                            Name = "Herói da Nutrição",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("29522d91-1c1e-45a8-b8b7-bd9d5084d098"),
                            CauseId = new Guid("ea97da90-4f47-4548-a4b7-dccc57d70919"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 956, DateTimeKind.Unspecified).AddTicks(7723),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/doacao-de-alimento/guardiao-da-fome-zero.png",
                            Name = "Guardião da Fome Zero",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("caa716be-6f64-4b2e-8188-11fd7c2e6cb3"),
                            CauseId = new Guid("0e233a64-ac1a-42aa-95b2-42a44bc0d5e6"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 956, DateTimeKind.Unspecified).AddTicks(7731),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/sem-teto/amigo-de-rua.png",
                            Name = "Amigo de Rua",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("c81bb9ed-9f52-4a76-a364-4577dbd09a89"),
                            CauseId = new Guid("0e233a64-ac1a-42aa-95b2-42a44bc0d5e6"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 956, DateTimeKind.Unspecified).AddTicks(7737),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/sem-teto/protetor-da-esperanca.png",
                            Name = "Protetor da Esperança",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("0aa0354e-6b83-4713-985b-a87a6555b22e"),
                            CauseId = new Guid("0e233a64-ac1a-42aa-95b2-42a44bc0d5e6"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 956, DateTimeKind.Unspecified).AddTicks(7742),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/sem-teto/herói-solidário.png",
                            Name = "Herói Solidário",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("38fd7156-6e32-464f-afe9-228ff80a5673"),
                            CauseId = new Guid("0e233a64-ac1a-42aa-95b2-42a44bc0d5e6"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 956, DateTimeKind.Unspecified).AddTicks(7753),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/sem-teto/guardiao-da-dignidade.png",
                            Name = "Guardião da Dignidade",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("2be857d7-45ea-4572-86ec-0b2b68af6af1"),
                            CauseId = new Guid("b8b6682e-2e4b-42cd-9d46-9c6020d0edc3"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 956, DateTimeKind.Unspecified).AddTicks(7760),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/moradia/construtor-solidário.png",
                            Name = "Construtor Solidário",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("9c8b1f9b-bb46-42a3-b2e7-a7d3b91242a1"),
                            CauseId = new Guid("b8b6682e-2e4b-42cd-9d46-9c6020d0edc3"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 956, DateTimeKind.Unspecified).AddTicks(7766),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/moradia/protetor-dos-lares.png",
                            Name = "Protetor dos Lares",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("71b60f01-bfbc-4f29-9cc9-e1fb7ec15346"),
                            CauseId = new Guid("b8b6682e-2e4b-42cd-9d46-9c6020d0edc3"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 956, DateTimeKind.Unspecified).AddTicks(7776),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/moradia/herói-da-moradia.png",
                            Name = "Herói da Moradia",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("37f497f7-88ca-4d4d-a715-a96124b5543b"),
                            CauseId = new Guid("b8b6682e-2e4b-42cd-9d46-9c6020d0edc3"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 956, DateTimeKind.Unspecified).AddTicks(7786),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/moradia/guardiao-dos-lares.png",
                            Name = "Guardião dos Lares",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("05d09543-291b-4d33-8535-85c90fb8d545"),
                            CauseId = new Guid("d92fcacb-e148-46ce-919b-884e1f21c074"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 956, DateTimeKind.Unspecified).AddTicks(7792),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/cultura/curador-comunitário.png",
                            Name = "Curador Comunitário",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("0af779f6-6d1d-4e74-95aa-fab02caa08b7"),
                            CauseId = new Guid("d92fcacb-e148-46ce-919b-884e1f21c074"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 956, DateTimeKind.Unspecified).AddTicks(7799),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/cultura/protetor-da-tradicao.png",
                            Name = "Protetor da Tradição",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("94b8d010-ff2c-485f-977b-5971597d1c27"),
                            CauseId = new Guid("d92fcacb-e148-46ce-919b-884e1f21c074"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 956, DateTimeKind.Unspecified).AddTicks(7805),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/cultura/herói-cultural.png",
                            Name = "Herói Cultural",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("756fa3ff-9315-4afa-8505-a985eb333f70"),
                            CauseId = new Guid("d92fcacb-e148-46ce-919b-884e1f21c074"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 956, DateTimeKind.Unspecified).AddTicks(7811),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/cultura/guardiao-das-artes.png",
                            Name = "Guardião das Artes",
                            QuestCount = 50
                        });
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Complement")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Neighbourhood")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid?>("QuestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Id");

                    b.HasIndex("QuestId");

                    b.HasIndex("UserId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Cause", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cause");

                    b.HasData(
                        new
                        {
                            Id = new Guid("90b3edbe-1324-45c1-9c57-df4af3ceed9e"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 953, DateTimeKind.Unspecified).AddTicks(6741),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/meio-ambiente/meio-ambiente.png",
                            Name = "Meio ambiente"
                        },
                        new
                        {
                            Id = new Guid("e02eb619-9980-40af-b731-e18ac1f33330"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 953, DateTimeKind.Unspecified).AddTicks(8661),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/educacao/educacao.png",
                            Name = "Educação"
                        },
                        new
                        {
                            Id = new Guid("c0238afc-8bfc-499f-b26b-73662c8ee715"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 953, DateTimeKind.Unspecified).AddTicks(8712),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/protecao-dos-animais/protecao-dos-animais.png",
                            Name = "Proteção dos animais"
                        },
                        new
                        {
                            Id = new Guid("c8003987-fdb3-45dc-af77-a26f21b356b2"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 953, DateTimeKind.Unspecified).AddTicks(8723),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/saude/saude.png",
                            Name = "Saúde"
                        },
                        new
                        {
                            Id = new Guid("0f379564-b447-4711-ba4f-c356c98cb88b"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 953, DateTimeKind.Unspecified).AddTicks(8734),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/esporte/esporte.png",
                            Name = "Esporte"
                        },
                        new
                        {
                            Id = new Guid("ea97da90-4f47-4548-a4b7-dccc57d70919"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 953, DateTimeKind.Unspecified).AddTicks(8739),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/doacao-de-alimento/doacao-de-alimento.png",
                            Name = "Doação"
                        },
                        new
                        {
                            Id = new Guid("0e233a64-ac1a-42aa-95b2-42a44bc0d5e6"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 953, DateTimeKind.Unspecified).AddTicks(8747),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/sem-teto/sem-teto.png",
                            Name = "Apoio aos sem-teto"
                        },
                        new
                        {
                            Id = new Guid("b8b6682e-2e4b-42cd-9d46-9c6020d0edc3"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 953, DateTimeKind.Unspecified).AddTicks(8763),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/moradia/moradia.png",
                            Name = "Moradia"
                        },
                        new
                        {
                            Id = new Guid("d92fcacb-e148-46ce-919b-884e1f21c074"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 953, DateTimeKind.Unspecified).AddTicks(8768),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/cultura/cultura.png",
                            Name = "Cultura"
                        });
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Email", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("TemplateId")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Email");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Ngo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Document")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<DateTime?>("FoundingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Ngo");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.OAuthProvider", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailProperty")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmailVerifiedProperty")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameProperty")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PictureProperty")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserInfoApiUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OAuthProvider");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.OnboardingTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Redirect")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OnboardingTask");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e55e6075-bd9a-40b5-9e64-01cc05ea2707"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 957, DateTimeKind.Unspecified).AddTicks(166),
                            Description = "Adicione uma foto à sua conta para que ONGs e outros voluntários o reconheçam.",
                            Image = "https://voluntrprodeastusst.blob.core.windows.net/images/onboarding/photo.png",
                            Name = "Apresente-se à comunidade",
                            Redirect = "/profile",
                            Type = "Foto"
                        },
                        new
                        {
                            Id = new Guid("cff981fc-2e3a-4d1a-8e8d-e707b4f21d11"),
                            CreatedAt = new DateTime(2025, 1, 28, 19, 28, 29, 957, DateTimeKind.Unspecified).AddTicks(3054),
                            Description = "Escolha causas que te inspiram. Assim, você verá missões que combinam com seus interesses.",
                            Image = "https://voluntrprodeastusst.blob.core.windows.net/images/onboarding/cause.png",
                            Name = "Hora do match",
                            Redirect = "/profile",
                            Type = "Causa"
                        });
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("NgoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NgoId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Quest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemote")
                        .HasColumnType("bit");

                    b.Property<int>("MaxVolunteers")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Reward")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Quest");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.QuestAssignment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ImageAttachmentUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("QuestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubmissionResponse")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("VolunteerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("QuestId");

                    b.HasIndex("VolunteerId");

                    b.ToTable("QuestAssignment");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("EmailVerified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("OAuthProviderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Paused")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Phone")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OAuthProviderId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.UserAchievement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AchievementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AchievementId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAchievement");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.UserCause", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CauseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CauseId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCause");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Volunteer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nickname")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Volunteer");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Achievement", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Cause", "Cause")
                        .WithMany("Achievements")
                        .HasForeignKey("CauseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Cause");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Address", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Quest", "Quest")
                        .WithMany()
                        .HasForeignKey("QuestId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Quest");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Company", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Ngo", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Notification", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Project", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Ngo", "Ngo")
                        .WithMany("Projects")
                        .HasForeignKey("NgoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ngo");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Quest", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Project", "Project")
                        .WithMany("Quests")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.QuestAssignment", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Quest", "Quest")
                        .WithMany()
                        .HasForeignKey("QuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Voluntr.Domain.Models.Volunteer", "Volunteer")
                        .WithMany()
                        .HasForeignKey("VolunteerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Quest");

                    b.Navigation("Volunteer");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.User", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.OAuthProvider", "OAuthProvider")
                        .WithMany()
                        .HasForeignKey("OAuthProviderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("OAuthProvider");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.UserAchievement", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Achievement", "Achievement")
                        .WithMany()
                        .HasForeignKey("AchievementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Achievement");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.UserCause", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Cause", "Cause")
                        .WithMany()
                        .HasForeignKey("CauseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cause");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Volunteer", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Cause", b =>
                {
                    b.Navigation("Achievements");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Ngo", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Project", b =>
                {
                    b.Navigation("Quests");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.User", b =>
                {
                    b.Navigation("Notifications");
                });
#pragma warning restore 612, 618
        }
    }
}
