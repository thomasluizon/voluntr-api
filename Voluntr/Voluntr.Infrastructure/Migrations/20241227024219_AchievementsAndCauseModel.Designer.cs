// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Voluntr.Infrastructure.Contexts;

#nullable disable

namespace Voluntr.Infrastructure.Migrations
{
    [DbContext(typeof(SqlContext))]
    [Migration("20241227024219_AchievementsAndCauseModel")]
    partial class AchievementsAndCauseModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Voluntr.Domain.Models.Achievement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CauseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TaskCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CauseId");

                    b.ToTable("Achievement");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b69311f5-1e5e-46ef-a85d-dd74933846fe"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 70, DateTimeKind.Unspecified).AddTicks(4116),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/arregacando-as-mangas.png",
                            Name = "Arregaçando as Mangas",
                            TaskCount = 5
                        },
                        new
                        {
                            Id = new Guid("28c97415-30df-4051-b548-b0700c9f7e21"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 70, DateTimeKind.Unspecified).AddTicks(4646),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/fazedor-de-impacto.png",
                            Name = "Fazedor de Impacto",
                            TaskCount = 10
                        },
                        new
                        {
                            Id = new Guid("a82d2e1d-6baf-40ce-8e0e-216497d29d69"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 70, DateTimeKind.Unspecified).AddTicks(4656),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/agente-da-mudanca.png",
                            Name = "Agente de Mudança",
                            TaskCount = 20
                        },
                        new
                        {
                            Id = new Guid("7761b02a-8668-47e0-8ca8-41ebc256fc3a"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 70, DateTimeKind.Unspecified).AddTicks(4663),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/heroi-da-comunidade.png",
                            Name = "Heroi da Comunidade",
                            TaskCount = 50
                        },
                        new
                        {
                            Id = new Guid("8e979338-84ed-49a0-957e-97fb765da566"),
                            CauseId = new Guid("b551d661-ff72-4477-812d-7c323bd25b1c"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 70, DateTimeKind.Unspecified).AddTicks(7986),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/meio-ambiente/eco-guardiao.png",
                            Name = "Eco-Guardião",
                            TaskCount = 5
                        },
                        new
                        {
                            Id = new Guid("e9c6c877-4e62-4cbd-9d2e-8352ca8d31c3"),
                            CauseId = new Guid("b551d661-ff72-4477-812d-7c323bd25b1c"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 72, DateTimeKind.Unspecified).AddTicks(2655),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/meio-ambiente/protetor-da-terra.png",
                            Name = "Protetor da Terra",
                            TaskCount = 10
                        },
                        new
                        {
                            Id = new Guid("f62cb819-f6ba-4b7e-a443-db9ce01972af"),
                            CauseId = new Guid("b551d661-ff72-4477-812d-7c323bd25b1c"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 72, DateTimeKind.Unspecified).AddTicks(2893),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/meio-ambiente/herói-verde.png",
                            Name = "Herói Verde",
                            TaskCount = 20
                        },
                        new
                        {
                            Id = new Guid("0ebb520d-8bdf-4cee-a7a0-b7b61b54e5e3"),
                            CauseId = new Guid("b551d661-ff72-4477-812d-7c323bd25b1c"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 72, DateTimeKind.Unspecified).AddTicks(2965),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/meio-ambiente/guardiao-ambiental.png",
                            Name = "Guardião Ambiental",
                            TaskCount = 50
                        },
                        new
                        {
                            Id = new Guid("eb7782e8-8851-40d4-83d3-072301814d31"),
                            CauseId = new Guid("3b80c751-1fa7-4575-8ad3-b7eb13a47275"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 72, DateTimeKind.Unspecified).AddTicks(3028),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/educacao/tutor-comunitário.png",
                            Name = "Tutor Comunitário",
                            TaskCount = 5
                        },
                        new
                        {
                            Id = new Guid("707787e0-7773-41f8-bfce-baa8a50669dd"),
                            CauseId = new Guid("3b80c751-1fa7-4575-8ad3-b7eb13a47275"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 72, DateTimeKind.Unspecified).AddTicks(3039),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/educacao/protetor-do-conhecimento.png",
                            Name = "Protetor do Conhecimento",
                            TaskCount = 10
                        },
                        new
                        {
                            Id = new Guid("5aeb4147-e4e5-4bb8-8306-cf0718dccda1"),
                            CauseId = new Guid("3b80c751-1fa7-4575-8ad3-b7eb13a47275"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 72, DateTimeKind.Unspecified).AddTicks(3048),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/educacao/herói-do-futuro.png",
                            Name = "Herói do Futuro",
                            TaskCount = 20
                        },
                        new
                        {
                            Id = new Guid("ef84ac94-4242-482b-834c-85f61fa4c4f7"),
                            CauseId = new Guid("3b80c751-1fa7-4575-8ad3-b7eb13a47275"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 72, DateTimeKind.Unspecified).AddTicks(3060),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/educacao/guardiao-da-transformacao.png",
                            Name = "Guardião da Transformação",
                            TaskCount = 50
                        },
                        new
                        {
                            Id = new Guid("ee38092d-544c-4bc4-8154-0fe1959b0398"),
                            CauseId = new Guid("39d0ad63-11ea-4f12-a249-ab09f18f61fa"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 72, DateTimeKind.Unspecified).AddTicks(3071),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/protecao-dos-animais/anjo-dos-animais.png",
                            Name = "Anjo dos Animais",
                            TaskCount = 5
                        },
                        new
                        {
                            Id = new Guid("48ee1c7a-4675-44d8-bf3a-a01c1b7ac986"),
                            CauseId = new Guid("39d0ad63-11ea-4f12-a249-ab09f18f61fa"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 72, DateTimeKind.Unspecified).AddTicks(3077),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/protecao-dos-animais/protetor-da-fauna.png",
                            Name = "Protetor da Fauna",
                            TaskCount = 10
                        },
                        new
                        {
                            Id = new Guid("7f70a0c3-ae2e-4cef-95ca-0bee367b59d6"),
                            CauseId = new Guid("39d0ad63-11ea-4f12-a249-ab09f18f61fa"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 72, DateTimeKind.Unspecified).AddTicks(3088),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/protecao-dos-animais/herói-das-patas.png",
                            Name = "Herói das Patas",
                            TaskCount = 20
                        },
                        new
                        {
                            Id = new Guid("5a5de271-8916-472c-b2c4-a4cc6d639402"),
                            CauseId = new Guid("39d0ad63-11ea-4f12-a249-ab09f18f61fa"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 72, DateTimeKind.Unspecified).AddTicks(3096),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/protecao-dos-animais/guardiao-dos-animais.png",
                            Name = "Guardião dos Animais",
                            TaskCount = 50
                        },
                        new
                        {
                            Id = new Guid("ce1fe782-887f-468b-bfda-c7c6b0839c7e"),
                            CauseId = new Guid("68f9ba3b-bd75-4c2f-ae30-6939d823a573"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 72, DateTimeKind.Unspecified).AddTicks(3105),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/saude/anjo-da-vida.png",
                            Name = "Anjo da Vida",
                            TaskCount = 5
                        },
                        new
                        {
                            Id = new Guid("fbfe8207-9804-4d67-a337-9d16e5d4442d"),
                            CauseId = new Guid("68f9ba3b-bd75-4c2f-ae30-6939d823a573"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 72, DateTimeKind.Unspecified).AddTicks(3112),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/saude/protetor-da-saúde.png",
                            Name = "Protetor da Saúde",
                            TaskCount = 10
                        },
                        new
                        {
                            Id = new Guid("eea55ed8-32f9-437a-b69e-04a714fe036e"),
                            CauseId = new Guid("68f9ba3b-bd75-4c2f-ae30-6939d823a573"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 72, DateTimeKind.Unspecified).AddTicks(3124),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/saude/herói-da-esperanca.png",
                            Name = "Herói da Esperança",
                            TaskCount = 20
                        },
                        new
                        {
                            Id = new Guid("ac0dc5ec-ff0b-47d5-9621-5728afc8092d"),
                            CauseId = new Guid("68f9ba3b-bd75-4c2f-ae30-6939d823a573"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 72, DateTimeKind.Unspecified).AddTicks(3133),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/saude/guardiao-da-vida.png",
                            Name = "Guardião da Vida",
                            TaskCount = 50
                        },
                        new
                        {
                            Id = new Guid("08813912-6305-4bd4-8b2f-415421833cbd"),
                            CauseId = new Guid("a5e31dfb-2633-47dc-a81c-eb2215c632e8"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 72, DateTimeKind.Unspecified).AddTicks(3146),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/esporte/atleta-solidário.png",
                            Name = "Atleta Solidário",
                            TaskCount = 5
                        },
                        new
                        {
                            Id = new Guid("eb422185-2a70-4d27-bf44-002f21c8d22b"),
                            CauseId = new Guid("a5e31dfb-2633-47dc-a81c-eb2215c632e8"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 72, DateTimeKind.Unspecified).AddTicks(3160),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/esporte/protetor-esportivo.png",
                            Name = "Protetor Esportivo",
                            TaskCount = 10
                        },
                        new
                        {
                            Id = new Guid("a2c7f7be-509f-4ff6-91a8-75536a6ccfed"),
                            CauseId = new Guid("a5e31dfb-2633-47dc-a81c-eb2215c632e8"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 72, DateTimeKind.Unspecified).AddTicks(3168),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/esporte/herói-do-movimento.png",
                            Name = "Herói do Movimento",
                            TaskCount = 20
                        },
                        new
                        {
                            Id = new Guid("4ef7bf31-c1fe-4305-834c-a4d1cf403903"),
                            CauseId = new Guid("a5e31dfb-2633-47dc-a81c-eb2215c632e8"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 72, DateTimeKind.Unspecified).AddTicks(3229),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/esporte/guardiao-das-medalhas.png",
                            Name = "Guardião das Medalhas",
                            TaskCount = 50
                        },
                        new
                        {
                            Id = new Guid("e0123a9c-60c2-4139-9e5f-c15fdd77f072"),
                            CauseId = new Guid("3ee43c2e-d3a5-4416-9689-ce40070f426d"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 72, DateTimeKind.Unspecified).AddTicks(3245),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/doacao-de-alimento/provedor-de-esperanca.png",
                            Name = "Provedor de Esperança",
                            TaskCount = 5
                        },
                        new
                        {
                            Id = new Guid("e3ced851-597d-40b5-a143-35f1d85e4ec3"),
                            CauseId = new Guid("3ee43c2e-d3a5-4416-9689-ce40070f426d"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 72, DateTimeKind.Unspecified).AddTicks(3253),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/doacao-de-alimento/protetor-da-esperanca.png",
                            Name = "Protetor da Esperança",
                            TaskCount = 10
                        },
                        new
                        {
                            Id = new Guid("e9f139f1-be49-4d91-b6ba-1c9fda3b62fb"),
                            CauseId = new Guid("3ee43c2e-d3a5-4416-9689-ce40070f426d"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 72, DateTimeKind.Unspecified).AddTicks(3260),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/doacao-de-alimento/herói-da-nutricao.png",
                            Name = "Herói da Nutrição",
                            TaskCount = 20
                        },
                        new
                        {
                            Id = new Guid("79e2997a-2e79-4400-adea-a14bb7c5e0de"),
                            CauseId = new Guid("3ee43c2e-d3a5-4416-9689-ce40070f426d"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 72, DateTimeKind.Unspecified).AddTicks(3268),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/doacao-de-alimento/guardiao-da-fome-zero.png",
                            Name = "Guardião da Fome Zero",
                            TaskCount = 50
                        },
                        new
                        {
                            Id = new Guid("c40a0035-3aec-4680-9ecd-4325ca0025ee"),
                            CauseId = new Guid("66bdc4e9-97aa-49ee-9f27-845212d91640"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 72, DateTimeKind.Unspecified).AddTicks(3277),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/sem-teto/amigo-de-rua.png",
                            Name = "Amigo de Rua",
                            TaskCount = 5
                        },
                        new
                        {
                            Id = new Guid("10221e19-50f0-4b55-9263-44702f089265"),
                            CauseId = new Guid("66bdc4e9-97aa-49ee-9f27-845212d91640"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 72, DateTimeKind.Unspecified).AddTicks(3284),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/sem-teto/protetor-da-esperanca.png",
                            Name = "Protetor da Esperança",
                            TaskCount = 10
                        },
                        new
                        {
                            Id = new Guid("96c810b3-29f4-431a-9add-6ea47865700c"),
                            CauseId = new Guid("66bdc4e9-97aa-49ee-9f27-845212d91640"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 72, DateTimeKind.Unspecified).AddTicks(3291),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/sem-teto/herói-solidário.png",
                            Name = "Herói Solidário",
                            TaskCount = 20
                        },
                        new
                        {
                            Id = new Guid("98937f84-5dda-4f08-91a9-09bc66333846"),
                            CauseId = new Guid("66bdc4e9-97aa-49ee-9f27-845212d91640"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 72, DateTimeKind.Unspecified).AddTicks(3304),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/sem-teto/guardiao-da-dignidade.png",
                            Name = "Guardião da Dignidade",
                            TaskCount = 50
                        },
                        new
                        {
                            Id = new Guid("a74a5c9f-0151-4e45-bf20-f3a614ff7b4a"),
                            CauseId = new Guid("7235ed34-4e0c-4e9f-98a0-ed100f0c19f7"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 72, DateTimeKind.Unspecified).AddTicks(3313),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/moradia/construtor-solidário.png",
                            Name = "Construtor Solidário",
                            TaskCount = 5
                        },
                        new
                        {
                            Id = new Guid("9dec96c4-960a-4361-bc2d-3985d1c19f07"),
                            CauseId = new Guid("7235ed34-4e0c-4e9f-98a0-ed100f0c19f7"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 72, DateTimeKind.Unspecified).AddTicks(3320),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/moradia/protetor-dos-lares.png",
                            Name = "Protetor dos Lares",
                            TaskCount = 10
                        },
                        new
                        {
                            Id = new Guid("a21ff111-af63-403b-86e8-1738f2ebbe77"),
                            CauseId = new Guid("7235ed34-4e0c-4e9f-98a0-ed100f0c19f7"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 72, DateTimeKind.Unspecified).AddTicks(3332),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/moradia/herói-da-moradia.png",
                            Name = "Herói da Moradia",
                            TaskCount = 20
                        },
                        new
                        {
                            Id = new Guid("975c2ebe-3439-4d7f-a8ea-3418af3e3f21"),
                            CauseId = new Guid("7235ed34-4e0c-4e9f-98a0-ed100f0c19f7"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 72, DateTimeKind.Unspecified).AddTicks(3338),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/moradia/guardiao-dos-lares.png",
                            Name = "Guardião dos Lares",
                            TaskCount = 50
                        },
                        new
                        {
                            Id = new Guid("6d6290e9-5912-4bd9-99be-a8a2adbfea30"),
                            CauseId = new Guid("8f4cc0a4-9f79-4a13-9019-eba2392fa9cd"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 72, DateTimeKind.Unspecified).AddTicks(3346),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/cultura/curador-comunitário.png",
                            Name = "Curador Comunitário",
                            TaskCount = 5
                        },
                        new
                        {
                            Id = new Guid("01d6468e-cb5c-499a-bbb8-cd20830d0d67"),
                            CauseId = new Guid("8f4cc0a4-9f79-4a13-9019-eba2392fa9cd"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 72, DateTimeKind.Unspecified).AddTicks(3353),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/cultura/protetor-da-tradicao.png",
                            Name = "Protetor da Tradição",
                            TaskCount = 10
                        },
                        new
                        {
                            Id = new Guid("65f18693-f88c-4a8a-a5ed-5a111ee638f3"),
                            CauseId = new Guid("8f4cc0a4-9f79-4a13-9019-eba2392fa9cd"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 72, DateTimeKind.Unspecified).AddTicks(3394),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/cultura/herói-cultural.png",
                            Name = "Herói Cultural",
                            TaskCount = 20
                        },
                        new
                        {
                            Id = new Guid("b6fe59a4-e08b-4240-b46b-e71139ad5aac"),
                            CauseId = new Guid("8f4cc0a4-9f79-4a13-9019-eba2392fa9cd"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 72, DateTimeKind.Unspecified).AddTicks(3402),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/cultura/guardiao-das-artes.png",
                            Name = "Guardião das Artes",
                            TaskCount = 50
                        });
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Complement")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Neighbourhood")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Cause", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cause");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b551d661-ff72-4477-812d-7c323bd25b1c"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 69, DateTimeKind.Unspecified).AddTicks(6832),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/meio-ambiente/meio-ambiente.png",
                            Name = "Meio ambiente"
                        },
                        new
                        {
                            Id = new Guid("3b80c751-1fa7-4575-8ad3-b7eb13a47275"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 69, DateTimeKind.Unspecified).AddTicks(9094),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/educacao/educacao.png",
                            Name = "Educação"
                        },
                        new
                        {
                            Id = new Guid("39d0ad63-11ea-4f12-a249-ab09f18f61fa"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 69, DateTimeKind.Unspecified).AddTicks(9128),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/protecao-dos-animais/protecao-dos-animais.png",
                            Name = "Proteção dos animais"
                        },
                        new
                        {
                            Id = new Guid("68f9ba3b-bd75-4c2f-ae30-6939d823a573"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 69, DateTimeKind.Unspecified).AddTicks(9145),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/saude/saude.png",
                            Name = "Saúde"
                        },
                        new
                        {
                            Id = new Guid("a5e31dfb-2633-47dc-a81c-eb2215c632e8"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 69, DateTimeKind.Unspecified).AddTicks(9158),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/esporte/esporte.png",
                            Name = "Esporte"
                        },
                        new
                        {
                            Id = new Guid("3ee43c2e-d3a5-4416-9689-ce40070f426d"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 69, DateTimeKind.Unspecified).AddTicks(9168),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/doacao-de-alimento/doacao-de-alimento.png",
                            Name = "Doação"
                        },
                        new
                        {
                            Id = new Guid("66bdc4e9-97aa-49ee-9f27-845212d91640"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 69, DateTimeKind.Unspecified).AddTicks(9174),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/sem-teto/sem-teto.png",
                            Name = "Apoio aos sem-teto"
                        },
                        new
                        {
                            Id = new Guid("7235ed34-4e0c-4e9f-98a0-ed100f0c19f7"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 69, DateTimeKind.Unspecified).AddTicks(9179),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/moradia/moradia.png",
                            Name = "Moradia"
                        },
                        new
                        {
                            Id = new Guid("8f4cc0a4-9f79-4a13-9019-eba2392fa9cd"),
                            CreatedAt = new DateTime(2024, 12, 26, 23, 42, 19, 69, DateTimeKind.Unspecified).AddTicks(9196),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/cultura/cultura.png",
                            Name = "Cultura"
                        });
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Email", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("TemplateId")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Email");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Ngo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Ngo");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.OAuthProvider", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailProperty")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmailVerifiedProperty")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameProperty")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PictureProperty")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserInfoApiUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OAuthProvider");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("EmailVerified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("OAuthProviderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Paused")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Phone")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OAuthProviderId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.UserAchievement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AchievementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AchievementId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAchievement");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.UserCause", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CauseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CauseId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCause");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Volunteer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Volunteer");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Achievement", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Cause", "Cause")
                        .WithMany("Achievements")
                        .HasForeignKey("CauseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Cause");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Address", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Company", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Ngo", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Notification", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.User", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.OAuthProvider", "OAuthProvider")
                        .WithMany()
                        .HasForeignKey("OAuthProviderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("OAuthProvider");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.UserAchievement", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Achievement", "Achievement")
                        .WithMany()
                        .HasForeignKey("AchievementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Achievement");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.UserCause", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Cause", "Cause")
                        .WithMany()
                        .HasForeignKey("CauseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cause");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Volunteer", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Cause", b =>
                {
                    b.Navigation("Achievements");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.User", b =>
                {
                    b.Navigation("Notifications");
                });
#pragma warning restore 612, 618
        }
    }
}
