// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Voluntr.Infrastructure.Contexts;

#nullable disable

namespace Voluntr.Infrastructure.Migrations
{
    [DbContext(typeof(SqlContext))]
    [Migration("20250103215849_VolunteerModelNicknameProperty")]
    partial class VolunteerModelNicknameProperty
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Voluntr.Domain.Models.Achievement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CauseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("QuestCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CauseId");

                    b.ToTable("Achievement");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c858bbc5-9b8f-4393-b108-05cfbd12eddb"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 436, DateTimeKind.Unspecified).AddTicks(2332),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/arregacando-as-mangas.png",
                            Name = "Arregaçando as Mangas",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("ba419dbc-6676-42c9-9153-4fb83f8f06df"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 436, DateTimeKind.Unspecified).AddTicks(2857),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/fazedor-de-impacto.png",
                            Name = "Fazedor de Impacto",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("ce199ca1-08b1-4ccd-83c8-7d60aa4abaa9"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 436, DateTimeKind.Unspecified).AddTicks(2879),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/agente-da-mudanca.png",
                            Name = "Agente de Mudança",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("482ec8db-6073-4dfb-bd77-b65129171685"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 436, DateTimeKind.Unspecified).AddTicks(2886),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/heroi-da-comunidade.png",
                            Name = "Heroi da Comunidade",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("f0dcdce6-45b6-48b7-9e5b-9999b5098380"),
                            CauseId = new Guid("ab629b81-1706-45ca-b418-049e808f507b"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 436, DateTimeKind.Unspecified).AddTicks(5075),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/meio-ambiente/eco-guardiao.png",
                            Name = "Eco-Guardião",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("b789e4c0-94ae-4b0c-b115-04ba836ef2e5"),
                            CauseId = new Guid("ab629b81-1706-45ca-b418-049e808f507b"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 437, DateTimeKind.Unspecified).AddTicks(8925),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/meio-ambiente/protetor-da-terra.png",
                            Name = "Protetor da Terra",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("35392315-8239-461c-98ae-f36868581e4b"),
                            CauseId = new Guid("ab629b81-1706-45ca-b418-049e808f507b"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 437, DateTimeKind.Unspecified).AddTicks(9016),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/meio-ambiente/herói-verde.png",
                            Name = "Herói Verde",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("f82ac5e3-111a-46ab-8e3d-526c48cfce71"),
                            CauseId = new Guid("ab629b81-1706-45ca-b418-049e808f507b"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 437, DateTimeKind.Unspecified).AddTicks(9061),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/meio-ambiente/guardiao-ambiental.png",
                            Name = "Guardião Ambiental",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("7c9ac023-5c11-45a1-95df-d28e2766b6fb"),
                            CauseId = new Guid("2e9dd285-b4ef-4a67-8476-a0a2404135ac"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 437, DateTimeKind.Unspecified).AddTicks(9074),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/educacao/tutor-comunitário.png",
                            Name = "Tutor Comunitário",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("34ee8bfc-79c0-4fd7-81ae-cc41af93343e"),
                            CauseId = new Guid("2e9dd285-b4ef-4a67-8476-a0a2404135ac"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 437, DateTimeKind.Unspecified).AddTicks(9087),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/educacao/protetor-do-conhecimento.png",
                            Name = "Protetor do Conhecimento",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("0d7d34f1-e9b9-456c-b494-6379276f887d"),
                            CauseId = new Guid("2e9dd285-b4ef-4a67-8476-a0a2404135ac"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 437, DateTimeKind.Unspecified).AddTicks(9096),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/educacao/herói-do-futuro.png",
                            Name = "Herói do Futuro",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("22830f44-c721-4ad3-94b9-d68bf2fa135f"),
                            CauseId = new Guid("2e9dd285-b4ef-4a67-8476-a0a2404135ac"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 437, DateTimeKind.Unspecified).AddTicks(9106),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/educacao/guardiao-da-transformacao.png",
                            Name = "Guardião da Transformação",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("c9facd8e-852e-4641-8fc9-efe99b83df57"),
                            CauseId = new Guid("15694017-af90-4d35-944f-9a251e07fa26"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 437, DateTimeKind.Unspecified).AddTicks(9116),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/protecao-dos-animais/anjo-dos-animais.png",
                            Name = "Anjo dos Animais",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("b0b0abf5-d657-4001-b1ac-683bd37fa209"),
                            CauseId = new Guid("15694017-af90-4d35-944f-9a251e07fa26"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 437, DateTimeKind.Unspecified).AddTicks(9131),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/protecao-dos-animais/protetor-da-fauna.png",
                            Name = "Protetor da Fauna",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("1e007854-4c91-4a45-8f35-0d8a6edc7d09"),
                            CauseId = new Guid("15694017-af90-4d35-944f-9a251e07fa26"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 437, DateTimeKind.Unspecified).AddTicks(9142),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/protecao-dos-animais/herói-das-patas.png",
                            Name = "Herói das Patas",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("ad1bdb30-1af7-4c32-b31a-b89afe2c58da"),
                            CauseId = new Guid("15694017-af90-4d35-944f-9a251e07fa26"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 437, DateTimeKind.Unspecified).AddTicks(9148),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/protecao-dos-animais/guardiao-dos-animais.png",
                            Name = "Guardião dos Animais",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("8c2eb943-2e40-4aec-a0fd-f5972e132705"),
                            CauseId = new Guid("56ad944e-c92a-434f-b7b1-8592c1c0b29a"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 437, DateTimeKind.Unspecified).AddTicks(9157),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/saude/anjo-da-vida.png",
                            Name = "Anjo da Vida",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("e48a584c-5d35-45ac-bad1-2c9685bcf70e"),
                            CauseId = new Guid("56ad944e-c92a-434f-b7b1-8592c1c0b29a"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 437, DateTimeKind.Unspecified).AddTicks(9172),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/saude/protetor-da-saúde.png",
                            Name = "Protetor da Saúde",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("42465a0b-2ce4-4fcd-b5b0-18a8fffc82a5"),
                            CauseId = new Guid("56ad944e-c92a-434f-b7b1-8592c1c0b29a"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 437, DateTimeKind.Unspecified).AddTicks(9183),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/saude/herói-da-esperanca.png",
                            Name = "Herói da Esperança",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("c8a5e123-fdf3-45c9-8f12-65e3d9d77ae4"),
                            CauseId = new Guid("56ad944e-c92a-434f-b7b1-8592c1c0b29a"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 437, DateTimeKind.Unspecified).AddTicks(9190),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/saude/guardiao-da-vida.png",
                            Name = "Guardião da Vida",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("f857eebc-30a6-4dd5-aaa9-0452909b0126"),
                            CauseId = new Guid("7ce0994f-af57-4525-9d38-10930d170fb5"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 437, DateTimeKind.Unspecified).AddTicks(9202),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/esporte/atleta-solidário.png",
                            Name = "Atleta Solidário",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("32ce4826-a8f6-441e-84bb-03c857f9c6af"),
                            CauseId = new Guid("7ce0994f-af57-4525-9d38-10930d170fb5"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 437, DateTimeKind.Unspecified).AddTicks(9211),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/esporte/protetor-esportivo.png",
                            Name = "Protetor Esportivo",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("857e8c7b-9917-4137-91c9-74250447cab8"),
                            CauseId = new Guid("7ce0994f-af57-4525-9d38-10930d170fb5"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 437, DateTimeKind.Unspecified).AddTicks(9218),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/esporte/herói-do-movimento.png",
                            Name = "Herói do Movimento",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("efb9d5c2-fd1a-4bf5-b114-3abf988363db"),
                            CauseId = new Guid("7ce0994f-af57-4525-9d38-10930d170fb5"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 437, DateTimeKind.Unspecified).AddTicks(9224),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/esporte/guardiao-das-medalhas.png",
                            Name = "Guardião das Medalhas",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("659debc2-f74d-498e-9f9a-4a2f945fa576"),
                            CauseId = new Guid("4935abc2-8b7b-46bc-8258-fe9ad9fe0bc6"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 437, DateTimeKind.Unspecified).AddTicks(9240),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/doacao-de-alimento/provedor-de-esperanca.png",
                            Name = "Provedor de Esperança",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("e41a179b-4efa-4503-882e-0d7ccfdaf5cd"),
                            CauseId = new Guid("4935abc2-8b7b-46bc-8258-fe9ad9fe0bc6"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 437, DateTimeKind.Unspecified).AddTicks(9246),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/doacao-de-alimento/protetor-da-esperanca.png",
                            Name = "Protetor da Esperança",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("e453f7f7-09ff-4996-9e14-d40c198ab840"),
                            CauseId = new Guid("4935abc2-8b7b-46bc-8258-fe9ad9fe0bc6"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 437, DateTimeKind.Unspecified).AddTicks(9252),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/doacao-de-alimento/herói-da-nutricao.png",
                            Name = "Herói da Nutrição",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("b8e545cb-4b62-4484-beef-f9773c66bdd0"),
                            CauseId = new Guid("4935abc2-8b7b-46bc-8258-fe9ad9fe0bc6"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 437, DateTimeKind.Unspecified).AddTicks(9258),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/doacao-de-alimento/guardiao-da-fome-zero.png",
                            Name = "Guardião da Fome Zero",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("1b50d597-f8c8-42ab-beec-f97ba8632a2d"),
                            CauseId = new Guid("d40cda48-e6a3-41cb-b542-2039c1e0cc8c"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 437, DateTimeKind.Unspecified).AddTicks(9270),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/sem-teto/amigo-de-rua.png",
                            Name = "Amigo de Rua",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("5063ce27-2fc3-4841-b8ab-50c2ad370d28"),
                            CauseId = new Guid("d40cda48-e6a3-41cb-b542-2039c1e0cc8c"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 437, DateTimeKind.Unspecified).AddTicks(9276),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/sem-teto/protetor-da-esperanca.png",
                            Name = "Protetor da Esperança",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("a786ea85-cb67-45a7-b312-4fb350d808bb"),
                            CauseId = new Guid("d40cda48-e6a3-41cb-b542-2039c1e0cc8c"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 437, DateTimeKind.Unspecified).AddTicks(9283),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/sem-teto/herói-solidário.png",
                            Name = "Herói Solidário",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("32af8a34-aa3f-4faa-bf57-23d7bf13f5f9"),
                            CauseId = new Guid("d40cda48-e6a3-41cb-b542-2039c1e0cc8c"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 437, DateTimeKind.Unspecified).AddTicks(9293),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/sem-teto/guardiao-da-dignidade.png",
                            Name = "Guardião da Dignidade",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("14684e0b-0ed9-4626-81dd-64b43f6197e1"),
                            CauseId = new Guid("ee0160fe-08a9-48a0-b42f-540482cd33e5"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 437, DateTimeKind.Unspecified).AddTicks(9301),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/moradia/construtor-solidário.png",
                            Name = "Construtor Solidário",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("3da2e946-d3dd-4ca2-8778-bb7cc14dae83"),
                            CauseId = new Guid("ee0160fe-08a9-48a0-b42f-540482cd33e5"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 437, DateTimeKind.Unspecified).AddTicks(9308),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/moradia/protetor-dos-lares.png",
                            Name = "Protetor dos Lares",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("064a78a6-535f-4725-9dda-efb08327309f"),
                            CauseId = new Guid("ee0160fe-08a9-48a0-b42f-540482cd33e5"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 437, DateTimeKind.Unspecified).AddTicks(9320),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/moradia/herói-da-moradia.png",
                            Name = "Herói da Moradia",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("52c95348-b9e2-46cd-8e2b-8e0ba14e1c76"),
                            CauseId = new Guid("ee0160fe-08a9-48a0-b42f-540482cd33e5"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 437, DateTimeKind.Unspecified).AddTicks(9326),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/moradia/guardiao-dos-lares.png",
                            Name = "Guardião dos Lares",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("09ff4b3e-0f91-4c01-9814-1a7c7e3b890e"),
                            CauseId = new Guid("12e27a89-5f07-42c7-af8d-381fc065b8c2"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 437, DateTimeKind.Unspecified).AddTicks(9333),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/cultura/curador-comunitário.png",
                            Name = "Curador Comunitário",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("df0d05d5-5a51-449e-a6bd-bdfeb13fa236"),
                            CauseId = new Guid("12e27a89-5f07-42c7-af8d-381fc065b8c2"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 437, DateTimeKind.Unspecified).AddTicks(9339),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/cultura/protetor-da-tradicao.png",
                            Name = "Protetor da Tradição",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("1712f34b-42d4-4aa0-834a-eef096abc911"),
                            CauseId = new Guid("12e27a89-5f07-42c7-af8d-381fc065b8c2"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 437, DateTimeKind.Unspecified).AddTicks(9346),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/cultura/herói-cultural.png",
                            Name = "Herói Cultural",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("89c3d7de-8513-4727-b52b-822997751091"),
                            CauseId = new Guid("12e27a89-5f07-42c7-af8d-381fc065b8c2"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 437, DateTimeKind.Unspecified).AddTicks(9352),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/cultura/guardiao-das-artes.png",
                            Name = "Guardião das Artes",
                            QuestCount = 50
                        });
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Complement")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Neighbourhood")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Cause", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cause");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ab629b81-1706-45ca-b418-049e808f507b"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 435, DateTimeKind.Unspecified).AddTicks(2409),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/meio-ambiente/meio-ambiente.png",
                            Name = "Meio ambiente"
                        },
                        new
                        {
                            Id = new Guid("2e9dd285-b4ef-4a67-8476-a0a2404135ac"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 435, DateTimeKind.Unspecified).AddTicks(7061),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/educacao/educacao.png",
                            Name = "Educação"
                        },
                        new
                        {
                            Id = new Guid("15694017-af90-4d35-944f-9a251e07fa26"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 435, DateTimeKind.Unspecified).AddTicks(7120),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/protecao-dos-animais/protecao-dos-animais.png",
                            Name = "Proteção dos animais"
                        },
                        new
                        {
                            Id = new Guid("56ad944e-c92a-434f-b7b1-8592c1c0b29a"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 435, DateTimeKind.Unspecified).AddTicks(7141),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/saude/saude.png",
                            Name = "Saúde"
                        },
                        new
                        {
                            Id = new Guid("7ce0994f-af57-4525-9d38-10930d170fb5"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 435, DateTimeKind.Unspecified).AddTicks(7153),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/esporte/esporte.png",
                            Name = "Esporte"
                        },
                        new
                        {
                            Id = new Guid("4935abc2-8b7b-46bc-8258-fe9ad9fe0bc6"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 435, DateTimeKind.Unspecified).AddTicks(7162),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/doacao-de-alimento/doacao-de-alimento.png",
                            Name = "Doação"
                        },
                        new
                        {
                            Id = new Guid("d40cda48-e6a3-41cb-b542-2039c1e0cc8c"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 435, DateTimeKind.Unspecified).AddTicks(7190),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/sem-teto/sem-teto.png",
                            Name = "Apoio aos sem-teto"
                        },
                        new
                        {
                            Id = new Guid("ee0160fe-08a9-48a0-b42f-540482cd33e5"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 435, DateTimeKind.Unspecified).AddTicks(7212),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/moradia/moradia.png",
                            Name = "Moradia"
                        },
                        new
                        {
                            Id = new Guid("12e27a89-5f07-42c7-af8d-381fc065b8c2"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 435, DateTimeKind.Unspecified).AddTicks(7219),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/cultura/cultura.png",
                            Name = "Cultura"
                        });
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Email", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("TemplateId")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Email");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Ngo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Ngo");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.OAuthProvider", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailProperty")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmailVerifiedProperty")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameProperty")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PictureProperty")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserInfoApiUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OAuthProvider");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.OnboardingTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Redirect")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OnboardingTask");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a7d46088-ac2b-4335-9dc1-f28477e31138"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 438, DateTimeKind.Unspecified).AddTicks(2358),
                            Description = "Adicione uma foto à sua conta para que ONGs e outros voluntários o reconheçam.",
                            Image = "https://voluntrprodeastusst.blob.core.windows.net/images/onboarding/photo.png",
                            Name = "Apresente-se à comunidade",
                            Redirect = "/profile",
                            Type = "Foto"
                        },
                        new
                        {
                            Id = new Guid("bc65ef87-5377-43c6-84b1-7689d2fffa57"),
                            CreatedAt = new DateTime(2025, 1, 3, 18, 58, 49, 438, DateTimeKind.Unspecified).AddTicks(5416),
                            Description = "Escolha causas que te inspiram. Assim, você verá missões que combinam com seus interesses.",
                            Image = "https://voluntrprodeastusst.blob.core.windows.net/images/onboarding/cause.png",
                            Name = "Hora do match",
                            Redirect = "/profile",
                            Type = "Causa"
                        });
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("NgoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NgoId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Quest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Reward")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Quest");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.QuestAssignment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ImageAttachmentUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("QuestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("VolunteerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("QuestId");

                    b.HasIndex("VolunteerId");

                    b.ToTable("QuestAssignment");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("EmailVerified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("OAuthProviderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Paused")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Phone")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OAuthProviderId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.UserAchievement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AchievementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AchievementId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAchievement");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.UserCause", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CauseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CauseId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCause");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Volunteer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nickname")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Volunteer");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Achievement", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Cause", "Cause")
                        .WithMany("Achievements")
                        .HasForeignKey("CauseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Cause");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Address", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Company", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Ngo", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Notification", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Project", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Ngo", "Ngo")
                        .WithMany("Projects")
                        .HasForeignKey("NgoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ngo");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Quest", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Project", "Project")
                        .WithMany("Quests")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.QuestAssignment", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Quest", "Quest")
                        .WithMany()
                        .HasForeignKey("QuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Voluntr.Domain.Models.Volunteer", "Volunteer")
                        .WithMany()
                        .HasForeignKey("VolunteerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Quest");

                    b.Navigation("Volunteer");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.User", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.OAuthProvider", "OAuthProvider")
                        .WithMany()
                        .HasForeignKey("OAuthProviderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("OAuthProvider");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.UserAchievement", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Achievement", "Achievement")
                        .WithMany()
                        .HasForeignKey("AchievementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Achievement");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.UserCause", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Cause", "Cause")
                        .WithMany()
                        .HasForeignKey("CauseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cause");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Volunteer", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Cause", b =>
                {
                    b.Navigation("Achievements");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Ngo", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Project", b =>
                {
                    b.Navigation("Quests");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.User", b =>
                {
                    b.Navigation("Notifications");
                });
#pragma warning restore 612, 618
        }
    }
}
