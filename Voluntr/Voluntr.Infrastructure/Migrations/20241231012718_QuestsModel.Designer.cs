// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Voluntr.Infrastructure.Contexts;

#nullable disable

namespace Voluntr.Infrastructure.Migrations
{
    [DbContext(typeof(SqlContext))]
    [Migration("20241231012718_QuestsModel")]
    partial class QuestsModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Voluntr.Domain.Models.Achievement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CauseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("QuestCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CauseId");

                    b.ToTable("Achievement");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1ea99745-e02b-4613-9b0e-263648aeae1a"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 39, DateTimeKind.Unspecified).AddTicks(2364),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/arregacando-as-mangas.png",
                            Name = "Arregaçando as Mangas",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("48a3eb45-a477-42f6-ae43-901de13cc974"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 39, DateTimeKind.Unspecified).AddTicks(2876),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/fazedor-de-impacto.png",
                            Name = "Fazedor de Impacto",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("1502ef9a-b792-49d2-8e9a-cfb311e6c59e"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 39, DateTimeKind.Unspecified).AddTicks(2894),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/agente-da-mudanca.png",
                            Name = "Agente de Mudança",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("5d95cc07-18f2-4a55-bb9c-a4251d9aebb0"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 39, DateTimeKind.Unspecified).AddTicks(2903),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/heroi-da-comunidade.png",
                            Name = "Heroi da Comunidade",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("18a8908c-0090-4cc7-b04d-976f06e7c0ec"),
                            CauseId = new Guid("6cd2705c-4d5f-44b0-8914-3be0aa882d51"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 39, DateTimeKind.Unspecified).AddTicks(5344),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/meio-ambiente/eco-guardiao.png",
                            Name = "Eco-Guardião",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("b8636862-59a5-4150-9a0c-f42dadde779e"),
                            CauseId = new Guid("6cd2705c-4d5f-44b0-8914-3be0aa882d51"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 40, DateTimeKind.Unspecified).AddTicks(9895),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/meio-ambiente/protetor-da-terra.png",
                            Name = "Protetor da Terra",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("2ce120de-869e-4741-8edf-ee57edfbaad9"),
                            CauseId = new Guid("6cd2705c-4d5f-44b0-8914-3be0aa882d51"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 40, DateTimeKind.Unspecified).AddTicks(9980),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/meio-ambiente/herói-verde.png",
                            Name = "Herói Verde",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("029c15cd-72ac-4d1e-b99c-785aa473167b"),
                            CauseId = new Guid("6cd2705c-4d5f-44b0-8914-3be0aa882d51"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 41, DateTimeKind.Unspecified).AddTicks(37),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/meio-ambiente/guardiao-ambiental.png",
                            Name = "Guardião Ambiental",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("5e7c10d3-5191-4bee-a897-838a5853e4dd"),
                            CauseId = new Guid("065a2c9c-149a-4eb1-9f46-044a1b729644"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 41, DateTimeKind.Unspecified).AddTicks(52),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/educacao/tutor-comunitário.png",
                            Name = "Tutor Comunitário",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("cef9b32f-90f8-4659-ad23-96d8e219c88c"),
                            CauseId = new Guid("065a2c9c-149a-4eb1-9f46-044a1b729644"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 41, DateTimeKind.Unspecified).AddTicks(65),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/educacao/protetor-do-conhecimento.png",
                            Name = "Protetor do Conhecimento",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("2f0a5285-80a0-4730-88c6-149d50910ca9"),
                            CauseId = new Guid("065a2c9c-149a-4eb1-9f46-044a1b729644"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 41, DateTimeKind.Unspecified).AddTicks(73),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/educacao/herói-do-futuro.png",
                            Name = "Herói do Futuro",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("c0082386-2dbe-4f12-8b44-d58390bb3117"),
                            CauseId = new Guid("065a2c9c-149a-4eb1-9f46-044a1b729644"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 41, DateTimeKind.Unspecified).AddTicks(93),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/educacao/guardiao-da-transformacao.png",
                            Name = "Guardião da Transformação",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("e6c8eb27-a5ac-4a55-b2c7-ef7a2995cd49"),
                            CauseId = new Guid("dd36a594-af47-4b23-b26d-b6b98a172821"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 41, DateTimeKind.Unspecified).AddTicks(105),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/protecao-dos-animais/anjo-dos-animais.png",
                            Name = "Anjo dos Animais",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("0fb79bce-3cb3-48a1-a0f9-b91e4ed89d58"),
                            CauseId = new Guid("dd36a594-af47-4b23-b26d-b6b98a172821"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 41, DateTimeKind.Unspecified).AddTicks(112),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/protecao-dos-animais/protetor-da-fauna.png",
                            Name = "Protetor da Fauna",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("31047cf2-5179-4596-b258-4e6fc8225f2c"),
                            CauseId = new Guid("dd36a594-af47-4b23-b26d-b6b98a172821"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 41, DateTimeKind.Unspecified).AddTicks(122),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/protecao-dos-animais/herói-das-patas.png",
                            Name = "Herói das Patas",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("23fa2d54-e79e-4902-97f4-2ef5447ccf19"),
                            CauseId = new Guid("dd36a594-af47-4b23-b26d-b6b98a172821"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 41, DateTimeKind.Unspecified).AddTicks(138),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/protecao-dos-animais/guardiao-dos-animais.png",
                            Name = "Guardião dos Animais",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("2030875a-c6e5-4bb5-8ca0-694acc4a8c7b"),
                            CauseId = new Guid("26d52215-62e4-47f8-aba7-64881bd27165"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 41, DateTimeKind.Unspecified).AddTicks(148),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/saude/anjo-da-vida.png",
                            Name = "Anjo da Vida",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("c5a82efb-85bc-41d8-aff5-5d94f3fa9c7e"),
                            CauseId = new Guid("26d52215-62e4-47f8-aba7-64881bd27165"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 41, DateTimeKind.Unspecified).AddTicks(155),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/saude/protetor-da-saúde.png",
                            Name = "Protetor da Saúde",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("f00cf0ee-beaf-4011-93df-0782fe032dc0"),
                            CauseId = new Guid("26d52215-62e4-47f8-aba7-64881bd27165"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 41, DateTimeKind.Unspecified).AddTicks(162),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/saude/herói-da-esperanca.png",
                            Name = "Herói da Esperança",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("d9adb736-1046-4bef-bd7b-2ff3726cdbba"),
                            CauseId = new Guid("26d52215-62e4-47f8-aba7-64881bd27165"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 41, DateTimeKind.Unspecified).AddTicks(172),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/saude/guardiao-da-vida.png",
                            Name = "Guardião da Vida",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("879a3a58-6d83-4162-a859-e139f7d01bfe"),
                            CauseId = new Guid("6c026560-2c3a-4df9-81c0-ead212aa72ad"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 41, DateTimeKind.Unspecified).AddTicks(180),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/esporte/atleta-solidário.png",
                            Name = "Atleta Solidário",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("96aba487-38e5-490e-a30e-f3bf8756d5ab"),
                            CauseId = new Guid("6c026560-2c3a-4df9-81c0-ead212aa72ad"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 41, DateTimeKind.Unspecified).AddTicks(198),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/esporte/protetor-esportivo.png",
                            Name = "Protetor Esportivo",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("d415cac1-49f7-4b3b-868d-110ae7b826ea"),
                            CauseId = new Guid("6c026560-2c3a-4df9-81c0-ead212aa72ad"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 41, DateTimeKind.Unspecified).AddTicks(205),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/esporte/herói-do-movimento.png",
                            Name = "Herói do Movimento",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("64758f6f-fb2e-439d-8c44-b159c343cd56"),
                            CauseId = new Guid("6c026560-2c3a-4df9-81c0-ead212aa72ad"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 41, DateTimeKind.Unspecified).AddTicks(213),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/esporte/guardiao-das-medalhas.png",
                            Name = "Guardião das Medalhas",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("82b631a5-6f89-4cd7-88bc-7715db9c7a58"),
                            CauseId = new Guid("13fbc9ee-6346-49ef-a650-a21feb27c583"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 41, DateTimeKind.Unspecified).AddTicks(227),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/doacao-de-alimento/provedor-de-esperanca.png",
                            Name = "Provedor de Esperança",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("b0abb8b1-0781-4fb1-9223-7e1baece4ce4"),
                            CauseId = new Guid("13fbc9ee-6346-49ef-a650-a21feb27c583"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 41, DateTimeKind.Unspecified).AddTicks(250),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/doacao-de-alimento/protetor-da-esperanca.png",
                            Name = "Protetor da Esperança",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("40ea02fb-597a-4a09-b162-3bfe0002a919"),
                            CauseId = new Guid("13fbc9ee-6346-49ef-a650-a21feb27c583"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 41, DateTimeKind.Unspecified).AddTicks(261),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/doacao-de-alimento/herói-da-nutricao.png",
                            Name = "Herói da Nutrição",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("1c2d04e5-e202-4aab-bd99-ff44fb1c19bb"),
                            CauseId = new Guid("13fbc9ee-6346-49ef-a650-a21feb27c583"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 41, DateTimeKind.Unspecified).AddTicks(269),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/doacao-de-alimento/guardiao-da-fome-zero.png",
                            Name = "Guardião da Fome Zero",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("6fe95a53-be7b-46f8-928b-1eb2f9bd1828"),
                            CauseId = new Guid("a9436df7-13ce-440f-85f9-46883e44eda0"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 41, DateTimeKind.Unspecified).AddTicks(279),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/sem-teto/amigo-de-rua.png",
                            Name = "Amigo de Rua",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("dbb044d9-b28c-47c0-854b-2101a168a99f"),
                            CauseId = new Guid("a9436df7-13ce-440f-85f9-46883e44eda0"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 41, DateTimeKind.Unspecified).AddTicks(289),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/sem-teto/protetor-da-esperanca.png",
                            Name = "Protetor da Esperança",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("0ea3fcd0-6f6f-4076-b8b5-dd61e5b9a325"),
                            CauseId = new Guid("a9436df7-13ce-440f-85f9-46883e44eda0"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 41, DateTimeKind.Unspecified).AddTicks(301),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/sem-teto/herói-solidário.png",
                            Name = "Herói Solidário",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("9ed72396-19a0-477a-b476-073ee340a530"),
                            CauseId = new Guid("a9436df7-13ce-440f-85f9-46883e44eda0"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 41, DateTimeKind.Unspecified).AddTicks(310),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/sem-teto/guardiao-da-dignidade.png",
                            Name = "Guardião da Dignidade",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("f6044fdb-d6d9-4b8a-b536-e95a0004175a"),
                            CauseId = new Guid("0e6b3884-28dc-4a20-84c1-e6214bbdda75"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 41, DateTimeKind.Unspecified).AddTicks(318),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/moradia/construtor-solidário.png",
                            Name = "Construtor Solidário",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("39d118f2-14e1-41e4-b94f-bed71e19e64d"),
                            CauseId = new Guid("0e6b3884-28dc-4a20-84c1-e6214bbdda75"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 41, DateTimeKind.Unspecified).AddTicks(326),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/moradia/protetor-dos-lares.png",
                            Name = "Protetor dos Lares",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("8add01cf-ff31-44d0-86a0-623e6c7115db"),
                            CauseId = new Guid("0e6b3884-28dc-4a20-84c1-e6214bbdda75"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 41, DateTimeKind.Unspecified).AddTicks(336),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/moradia/herói-da-moradia.png",
                            Name = "Herói da Moradia",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("1ee20420-b693-49a3-be3c-c0b71ac78b71"),
                            CauseId = new Guid("0e6b3884-28dc-4a20-84c1-e6214bbdda75"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 41, DateTimeKind.Unspecified).AddTicks(343),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/moradia/guardiao-dos-lares.png",
                            Name = "Guardião dos Lares",
                            QuestCount = 50
                        },
                        new
                        {
                            Id = new Guid("763d6d4c-a75c-432e-ad8e-f9addb69c318"),
                            CauseId = new Guid("2a8ef0b0-27f2-4dc7-adb4-d14c6fd271b6"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 41, DateTimeKind.Unspecified).AddTicks(350),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/cultura/curador-comunitário.png",
                            Name = "Curador Comunitário",
                            QuestCount = 5
                        },
                        new
                        {
                            Id = new Guid("ecf6c538-7919-4ea5-9002-7b99ee21bb32"),
                            CauseId = new Guid("2a8ef0b0-27f2-4dc7-adb4-d14c6fd271b6"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 41, DateTimeKind.Unspecified).AddTicks(361),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/cultura/protetor-da-tradicao.png",
                            Name = "Protetor da Tradição",
                            QuestCount = 10
                        },
                        new
                        {
                            Id = new Guid("51ad4e13-bcc0-4af8-83b7-437a1fda3b36"),
                            CauseId = new Guid("2a8ef0b0-27f2-4dc7-adb4-d14c6fd271b6"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 41, DateTimeKind.Unspecified).AddTicks(369),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/cultura/herói-cultural.png",
                            Name = "Herói Cultural",
                            QuestCount = 20
                        },
                        new
                        {
                            Id = new Guid("592088ec-e535-42ba-84b5-c4707a571f0f"),
                            CauseId = new Guid("2a8ef0b0-27f2-4dc7-adb4-d14c6fd271b6"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 41, DateTimeKind.Unspecified).AddTicks(377),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/cultura/guardiao-das-artes.png",
                            Name = "Guardião das Artes",
                            QuestCount = 50
                        });
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Complement")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Neighbourhood")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Cause", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cause");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6cd2705c-4d5f-44b0-8914-3be0aa882d51"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 38, DateTimeKind.Unspecified).AddTicks(5162),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/meio-ambiente/meio-ambiente.png",
                            Name = "Meio ambiente"
                        },
                        new
                        {
                            Id = new Guid("065a2c9c-149a-4eb1-9f46-044a1b729644"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 38, DateTimeKind.Unspecified).AddTicks(7233),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/educacao/educacao.png",
                            Name = "Educação"
                        },
                        new
                        {
                            Id = new Guid("dd36a594-af47-4b23-b26d-b6b98a172821"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 38, DateTimeKind.Unspecified).AddTicks(7273),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/protecao-dos-animais/protecao-dos-animais.png",
                            Name = "Proteção dos animais"
                        },
                        new
                        {
                            Id = new Guid("26d52215-62e4-47f8-aba7-64881bd27165"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 38, DateTimeKind.Unspecified).AddTicks(7285),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/saude/saude.png",
                            Name = "Saúde"
                        },
                        new
                        {
                            Id = new Guid("6c026560-2c3a-4df9-81c0-ead212aa72ad"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 38, DateTimeKind.Unspecified).AddTicks(7293),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/esporte/esporte.png",
                            Name = "Esporte"
                        },
                        new
                        {
                            Id = new Guid("13fbc9ee-6346-49ef-a650-a21feb27c583"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 38, DateTimeKind.Unspecified).AddTicks(7298),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/doacao-de-alimento/doacao-de-alimento.png",
                            Name = "Doação"
                        },
                        new
                        {
                            Id = new Guid("a9436df7-13ce-440f-85f9-46883e44eda0"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 38, DateTimeKind.Unspecified).AddTicks(7312),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/sem-teto/sem-teto.png",
                            Name = "Apoio aos sem-teto"
                        },
                        new
                        {
                            Id = new Guid("0e6b3884-28dc-4a20-84c1-e6214bbdda75"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 38, DateTimeKind.Unspecified).AddTicks(7318),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/moradia/moradia.png",
                            Name = "Moradia"
                        },
                        new
                        {
                            Id = new Guid("2a8ef0b0-27f2-4dc7-adb4-d14c6fd271b6"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 38, DateTimeKind.Unspecified).AddTicks(7328),
                            ImageUrl = "https://voluntrprodeastusst.blob.core.windows.net/images/achievements/cultura/cultura.png",
                            Name = "Cultura"
                        });
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Email", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("TemplateId")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Email");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Ngo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Ngo");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.OAuthProvider", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailProperty")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmailVerifiedProperty")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameProperty")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PictureProperty")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserInfoApiUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OAuthProvider");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.OnboardingTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Redirect")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OnboardingTask");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9c6d4453-3a11-4e6c-99e9-aaaea0f392e6"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 41, DateTimeKind.Unspecified).AddTicks(2888),
                            Description = "Adicione uma foto à sua conta para que ONGs e outros voluntários o reconheçam.",
                            Image = "https://voluntrprodeastusst.blob.core.windows.net/images/onboarding/photo.png",
                            Name = "Apresente-se à comunidade",
                            Redirect = "/profile",
                            Type = "Foto"
                        },
                        new
                        {
                            Id = new Guid("3381acb5-a89b-4a56-b0d3-efd650085653"),
                            CreatedAt = new DateTime(2024, 12, 30, 22, 27, 18, 41, DateTimeKind.Unspecified).AddTicks(6123),
                            Description = "Escolha causas que te inspiram. Assim, você verá missões que combinam com seus interesses.",
                            Image = "https://voluntrprodeastusst.blob.core.windows.net/images/onboarding/cause.png",
                            Name = "Hora do match",
                            Redirect = "/profile",
                            Type = "Causa"
                        });
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("NgoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NgoId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Quest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Reward")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Quest");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.QuestAssignment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ImageAttachmentUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("QuestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("VolunteerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("QuestId");

                    b.HasIndex("VolunteerId");

                    b.ToTable("QuestAssignment");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("EmailVerified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("OAuthProviderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Paused")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Phone")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OAuthProviderId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.UserAchievement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AchievementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AchievementId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAchievement");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.UserCause", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CauseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CauseId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCause");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Volunteer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Volunteer");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Achievement", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Cause", "Cause")
                        .WithMany("Achievements")
                        .HasForeignKey("CauseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Cause");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Address", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Company", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Ngo", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Notification", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Project", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Ngo", "Ngo")
                        .WithMany("Projects")
                        .HasForeignKey("NgoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ngo");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Quest", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Project", "Project")
                        .WithMany("Quests")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.QuestAssignment", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Quest", "Quest")
                        .WithMany()
                        .HasForeignKey("QuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Voluntr.Domain.Models.Volunteer", "Volunteer")
                        .WithMany()
                        .HasForeignKey("VolunteerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Quest");

                    b.Navigation("Volunteer");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.User", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.OAuthProvider", "OAuthProvider")
                        .WithMany()
                        .HasForeignKey("OAuthProviderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("OAuthProvider");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.UserAchievement", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Achievement", "Achievement")
                        .WithMany()
                        .HasForeignKey("AchievementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Achievement");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.UserCause", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.Cause", "Cause")
                        .WithMany()
                        .HasForeignKey("CauseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cause");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Volunteer", b =>
                {
                    b.HasOne("Voluntr.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Cause", b =>
                {
                    b.Navigation("Achievements");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Ngo", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.Project", b =>
                {
                    b.Navigation("Quests");
                });

            modelBuilder.Entity("Voluntr.Domain.Models.User", b =>
                {
                    b.Navigation("Notifications");
                });
#pragma warning restore 612, 618
        }
    }
}
